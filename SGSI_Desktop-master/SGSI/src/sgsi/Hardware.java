/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgsi;

import javax.swing.JOptionPane;

/**
 *
 * @author Luis Efe
 */
public class Hardware extends javax.swing.JFrame {

    /**
     * Creates new form activos_esenciales
     */
    public Hardware() {
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Superior = new javax.swing.JPanel();
        a = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        Inferior = new javax.swing.JPanel();
        d6 = new javax.swing.JLabel();
        d24 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Principal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        i54 = new javax.swing.JTextField();
        d54 = new javax.swing.JTextField();
        c54 = new javax.swing.JTextField();
        i55 = new javax.swing.JTextField();
        d55 = new javax.swing.JTextField();
        c55 = new javax.swing.JTextField();
        i56 = new javax.swing.JTextField();
        d56 = new javax.swing.JTextField();
        c56 = new javax.swing.JTextField();
        i57 = new javax.swing.JTextField();
        d57 = new javax.swing.JTextField();
        c57 = new javax.swing.JTextField();
        i58 = new javax.swing.JTextField();
        d58 = new javax.swing.JTextField();
        c58 = new javax.swing.JTextField();
        i60 = new javax.swing.JTextField();
        d60 = new javax.swing.JTextField();
        c60 = new javax.swing.JTextField();
        i61 = new javax.swing.JTextField();
        d61 = new javax.swing.JTextField();
        c61 = new javax.swing.JTextField();
        i63 = new javax.swing.JTextField();
        d63 = new javax.swing.JTextField();
        c63 = new javax.swing.JTextField();
        i64 = new javax.swing.JTextField();
        d64 = new javax.swing.JTextField();
        c64 = new javax.swing.JTextField();
        i65 = new javax.swing.JTextField();
        d65 = new javax.swing.JTextField();
        c65 = new javax.swing.JTextField();
        i66 = new javax.swing.JTextField();
        d66 = new javax.swing.JTextField();
        c66 = new javax.swing.JTextField();
        i67 = new javax.swing.JTextField();
        d67 = new javax.swing.JTextField();
        c67 = new javax.swing.JTextField();
        i68 = new javax.swing.JTextField();
        d68 = new javax.swing.JTextField();
        c68 = new javax.swing.JTextField();
        i69 = new javax.swing.JTextField();
        d69 = new javax.swing.JTextField();
        c69 = new javax.swing.JTextField();
        h54 = new javax.swing.JRadioButton();
        h55 = new javax.swing.JRadioButton();
        h56 = new javax.swing.JRadioButton();
        h57 = new javax.swing.JRadioButton();
        h58 = new javax.swing.JRadioButton();
        h60 = new javax.swing.JRadioButton();
        h61 = new javax.swing.JRadioButton();
        h63 = new javax.swing.JRadioButton();
        h64 = new javax.swing.JRadioButton();
        h65 = new javax.swing.JRadioButton();
        h66 = new javax.swing.JRadioButton();
        h67 = new javax.swing.JRadioButton();
        h68 = new javax.swing.JRadioButton();
        h69 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        continuar2 = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        seleccionar = new javax.swing.JButton();
        d11 = new javax.swing.JLabel();
        d12 = new javax.swing.JLabel();
        d25 = new javax.swing.JLabel();
        d26 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Equipos informáticos [Hardware]");
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        Superior.setBackground(new java.awt.Color(53, 96, 183));

        a.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        a.setForeground(new java.awt.Color(255, 255, 255));
        a.setText("Módulo equipamiento auxiliar");

        c.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));
        c.setText("Para continuar por favor no olvide que como paso inicial debe marcar los activos con los cuales cuente su organización, posteriormente dar click en \"Seleccionar y evaluar\"");

        b.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        b.setForeground(new java.awt.Color(255, 255, 255));
        b.setText("y luego debe asignar valores entre 0 y 9  de acuerdo al conocimiento que tenga sobre los niveles de confidencialidad, integridad y disponibilidad de los mismos .");

        d.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d.setForeground(new java.awt.Color(255, 255, 255));
        d.setText("Nota: Para más información sobre los activos click en los signos de interrogación. Recuerde que (0) es el valor más bajo y (9) es el valor más alto de valoración. ");

        javax.swing.GroupLayout SuperiorLayout = new javax.swing.GroupLayout(Superior);
        Superior.setLayout(SuperiorLayout);
        SuperiorLayout.setHorizontalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SuperiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b)
                    .addComponent(c)
                    .addComponent(d))
                .addContainerGap())
        );
        SuperiorLayout.setVerticalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c)
                .addGap(2, 2, 2)
                .addComponent(b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        Inferior.setBackground(new java.awt.Color(173, 15, 55));

        d6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 255, 255));
        d6.setText("Desarrollado por: Luis Fernando Díaz Muñoz - Juan Sebastián Erazo Chamorro");

        d24.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d24.setForeground(new java.awt.Color(255, 255, 255));
        d24.setText("Ingeniería de sistemas");

        javax.swing.GroupLayout InferiorLayout = new javax.swing.GroupLayout(Inferior);
        Inferior.setLayout(InferiorLayout);
        InferiorLayout.setHorizontalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                        .addComponent(d24)
                        .addGap(162, 162, 162)))
                .addGap(218, 218, 218))
        );
        InferiorLayout.setVerticalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Nombre");

        jLabel5.setText("Confianza");

        jLabel6.setText("Integridad");

        jLabel7.setText("Disponibilidad");

        i54.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i54KeyTyped(evt);
            }
        });

        d54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d54ActionPerformed(evt);
            }
        });
        d54.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d54KeyTyped(evt);
            }
        });

        c54.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c54KeyTyped(evt);
            }
        });

        i55.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i55KeyTyped(evt);
            }
        });

        d55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d55ActionPerformed(evt);
            }
        });
        d55.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d55KeyTyped(evt);
            }
        });

        c55.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c55KeyTyped(evt);
            }
        });

        i56.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i56KeyTyped(evt);
            }
        });

        d56.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d56ActionPerformed(evt);
            }
        });
        d56.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d56KeyTyped(evt);
            }
        });

        c56.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c56KeyTyped(evt);
            }
        });

        i57.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i57KeyTyped(evt);
            }
        });

        d57.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d57ActionPerformed(evt);
            }
        });
        d57.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d57KeyTyped(evt);
            }
        });

        c57.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c57KeyTyped(evt);
            }
        });

        i58.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i58KeyTyped(evt);
            }
        });

        d58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d58ActionPerformed(evt);
            }
        });
        d58.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d58KeyTyped(evt);
            }
        });

        c58.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c58KeyTyped(evt);
            }
        });

        i60.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i60KeyTyped(evt);
            }
        });

        d60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d60ActionPerformed(evt);
            }
        });
        d60.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d60KeyTyped(evt);
            }
        });

        c60.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c60KeyTyped(evt);
            }
        });

        i61.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i61KeyTyped(evt);
            }
        });

        d61.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d61ActionPerformed(evt);
            }
        });
        d61.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d61KeyTyped(evt);
            }
        });

        c61.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c61KeyTyped(evt);
            }
        });

        i63.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i63KeyTyped(evt);
            }
        });

        d63.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d63ActionPerformed(evt);
            }
        });
        d63.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d63KeyTyped(evt);
            }
        });

        c63.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c63KeyTyped(evt);
            }
        });

        i64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i64KeyTyped(evt);
            }
        });

        d64.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d64ActionPerformed(evt);
            }
        });
        d64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d64KeyTyped(evt);
            }
        });

        c64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c64KeyTyped(evt);
            }
        });

        i65.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i65KeyTyped(evt);
            }
        });

        d65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d65ActionPerformed(evt);
            }
        });
        d65.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d65KeyTyped(evt);
            }
        });

        c65.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c65KeyTyped(evt);
            }
        });

        i66.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i66KeyTyped(evt);
            }
        });

        d66.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d66ActionPerformed(evt);
            }
        });
        d66.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d66KeyTyped(evt);
            }
        });

        c66.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c66KeyTyped(evt);
            }
        });

        i67.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i67KeyTyped(evt);
            }
        });

        d67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d67ActionPerformed(evt);
            }
        });
        d67.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d67KeyTyped(evt);
            }
        });

        c67.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c67KeyTyped(evt);
            }
        });

        i68.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i68KeyTyped(evt);
            }
        });

        d68.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d68ActionPerformed(evt);
            }
        });
        d68.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d68KeyTyped(evt);
            }
        });

        c68.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c68KeyTyped(evt);
            }
        });

        i69.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i69KeyTyped(evt);
            }
        });

        d69.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d69ActionPerformed(evt);
            }
        });
        d69.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d69KeyTyped(evt);
            }
        });

        c69.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c69KeyTyped(evt);
            }
        });

        h54.setText("[host] Grandes equipos");

        h55.setText("[mid] Equipos medios");
        h55.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h55ActionPerformed(evt);
            }
        });

        h56.setText("[pc] Informática personal ");

        h57.setText("[mobile] Informática móvil");

        h58.setText("[backup] equipamiento de respaldo");

        h60.setText("[print] Medios de impresión");
        h60.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h60ActionPerformed(evt);
            }
        });

        h61.setText("[scan] Escáneres");

        h63.setText("[modem] Módems");

        h64.setText("[hub] Concentradores");

        h65.setText("[switch] Conmutadores");
        h65.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h65ActionPerformed(evt);
            }
        });

        h66.setText("[router] Encaminadores");

        h67.setText("[firewall] Cortafuegos");

        h68.setText("[wap] Punto de acceso inalámbrico");

        h69.setText("[ipphone] Teléfono IP");

        jLabel3.setText("¿?");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
        });

        jLabel8.setText("¿?");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel8MouseEntered(evt);
            }
        });

        jLabel9.setText("¿?");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
        });

        jLabel10.setText("¿?");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
        });

        jLabel11.setText("¿?");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel11MouseEntered(evt);
            }
        });

        jLabel12.setText("¿?");
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
        });

        jLabel13.setText("¿?");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("[peripheral] Periféricos");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("[network] Soporte de red ");

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel4)
                                .addGap(151, 151, 151)
                                .addComponent(jLabel5)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)))
                        .addGap(202, 202, 202))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(h61)
                                    .addComponent(h63)
                                    .addComponent(h66)
                                    .addComponent(h65)
                                    .addComponent(h68)
                                    .addComponent(h67)
                                    .addComponent(h64))
                                .addGap(34, 34, 34))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel13))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addComponent(h58)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                        .addComponent(jLabel11))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addComponent(h56)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addComponent(h55)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addComponent(h54)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3))
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addComponent(h69)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addComponent(h57)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10))
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel1)
                                            .addComponent(h60))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12)))
                                .addGap(18, 18, 18)))
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addComponent(c54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(i54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(d54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addComponent(c55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(i55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(d55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addComponent(c56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(i56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(d56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                    .addComponent(c57, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i57, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d57, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c58, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i58, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d58, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c60, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i60, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d60, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c61, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i61, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d61, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c63, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i63, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d63, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c64, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i64, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d64, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c65, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i65, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d65, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c66, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i66, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d66, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c67, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i67, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d67, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c68, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i68, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d68, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c69, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i69, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d69, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(217, 217, 217))))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(h54)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(h55)
                        .addGap(3, 3, 3)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(h56)
                            .addComponent(jLabel9))
                        .addGap(3, 3, 3)
                        .addComponent(h57)
                        .addGap(3, 3, 3)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(h58)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(h60)
                        .addGap(3, 3, 3)
                        .addComponent(h61)
                        .addGap(3, 3, 3)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel2))
                        .addGap(74, 74, 74)
                        .addComponent(h65)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h63))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h64))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h66))
                        .addGap(3, 3, 3)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i67, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d67, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c67, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h67))
                        .addGap(2, 2, 2)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h68))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i69, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d69, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c69, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h69))
                        .addGap(0, 22, Short.MAX_VALUE))))
        );

        jScrollPane1.setViewportView(Principal);

        continuar2.setText("Continuar");
        continuar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continuar2MouseClicked(evt);
            }
        });
        continuar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuar2ActionPerformed(evt);
            }
        });

        limpiar.setText("Limpiar");
        limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiarMouseClicked(evt);
            }
        });
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        seleccionar.setText("Seleccionar y evaluar");
        seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seleccionarMouseClicked(evt);
            }
        });
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        d11.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d11.setText("Info (Click en etiquetas):");

        d12.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d12.setText("Confidencialidad ||");
        d12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d12MouseClicked(evt);
            }
        });

        d25.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d25.setText("Integridad ||");
        d25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d25MouseClicked(evt);
            }
        });

        d26.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d26.setText("Disponibilidad");
        d26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d26MouseClicked(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Superior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(d11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(continuar2)
                        .addGap(8, 8, 8))
                    .addComponent(Inferior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d11)
                            .addComponent(d12)
                            .addComponent(d25)
                            .addComponent(d26)))
                    .addComponent(continuar2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(seleccionar)
                        .addComponent(limpiar)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Inferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void d54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d54ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d54ActionPerformed

    private void d55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d55ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d55ActionPerformed

    private void d56ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d56ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d56ActionPerformed

    private void d57ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d57ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d57ActionPerformed

    private void d58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d58ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d58ActionPerformed

    private void d60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d60ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d60ActionPerformed

    private void d61ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d61ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d61ActionPerformed

    private void d63ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d63ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d63ActionPerformed

    private void d64ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d64ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d64ActionPerformed

    private void d65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d65ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d65ActionPerformed

    private void d66ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d66ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d66ActionPerformed

    private void d67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d67ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d67ActionPerformed

    private void d68ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d68ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d68ActionPerformed

    private void d69ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d69ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d69ActionPerformed

    private void h60ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h60ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_h60ActionPerformed

    private void h65ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h65ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_h65ActionPerformed

    private void continuar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuar2MouseClicked

        if (h54.isSelected()||h55.isSelected()||h56.isSelected()||h57.isSelected()||h58.isSelected()
                ||h60.isSelected()||h61.isSelected()||h63.isSelected()||h64.isSelected()||h65.isSelected()
                || h66.isSelected()||h67.isSelected()||h68.isSelected()||h69.isSelected()){
                Principal principal = new Principal();
        principal.setVisible(true);
        this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_continuar2MouseClicked

    private void continuar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_continuar2ActionPerformed

    private void limpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarMouseClicked

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed

        seleccionar.setEnabled(true);
        h54.setSelected(false);
        h54.setEnabled(true);
        c54.setEnabled(true);
        d54.setEnabled(true);
        i54.setEnabled(true);

        h55.setSelected(false);
        h55.setEnabled(true);
        c55.setEnabled(true);
        d55.setEnabled(true);
        i55.setEnabled(true);
        
        h56.setSelected(false);
        h56.setEnabled(true);
        c56.setEnabled(true);
        d56.setEnabled(true);
        i56.setEnabled(true);
        
        h57.setSelected(false);
        h57.setEnabled(true);
        c57.setEnabled(true);
        d57.setEnabled(true);
        i57.setEnabled(true);
        
        h58.setSelected(false);
        h58.setEnabled(true);
        c58.setEnabled(true);
        d58.setEnabled(true);
        i58.setEnabled(true);        
              
        h60.setSelected(false);
        h60.setEnabled(true);
        c60.setEnabled(true);
        d60.setEnabled(true);
        i60.setEnabled(true);
        
        h61.setSelected(false);
        h61.setEnabled(true);
        c61.setEnabled(true);
        d61.setEnabled(true);
        i61.setEnabled(true);
                      
        h63.setSelected(false);
        h63.setEnabled(true);
        c63.setEnabled(true);
        d63.setEnabled(true);
        i63.setEnabled(true);
       
        h64.setSelected(false);
        h64.setEnabled(true);
        c64.setEnabled(true);
        d64.setEnabled(true);
        i64.setEnabled(true);
        
        h65.setSelected(false);
        h65.setEnabled(true);
        c65.setEnabled(true);
        d65.setEnabled(true);
        i65.setEnabled(true);
        
        h66.setSelected(false);
        h66.setEnabled(true);
        c66.setEnabled(true);
        d66.setEnabled(true);
        i66.setEnabled(true);
        
        h67.setSelected(false);
        h67.setEnabled(true);
        c67.setEnabled(true);
        d67.setEnabled(true);
        i67.setEnabled(true);
      
        h68.setSelected(false);
        h68.setEnabled(true);
        c68.setEnabled(true);
        d68.setEnabled(true);
        i68.setEnabled(true);
        
        h69.setSelected(false);
        h69.setEnabled(true);
        c69.setEnabled(true);
        d69.setEnabled(true);
        i69.setEnabled(true);
    }//GEN-LAST:event_limpiarActionPerformed

    private void seleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seleccionarMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarMouseClicked
public void validarActivos() {
    seleccionar.setEnabled(false);
        if (h54.isSelected()) {
            h54.setEnabled(true);
            c54.setEnabled(true);
            d54.setEnabled(true);
            i54.setEnabled(true);
        } else {
            h54.setEnabled(false);
            c54.setEnabled(false);
            d54.setEnabled(false);
            i54.setEnabled(false);
        }
        if (h55.isSelected()) {
            h55.setEnabled(true);
            c55.setEnabled(true);
            d55.setEnabled(true);
            i55.setEnabled(true);
        } else {
            h55.setEnabled(false);
            c55.setEnabled(false);
            d55.setEnabled(false);
            i55.setEnabled(false);
        }
        if (h56.isSelected()) {
            h56.setEnabled(true);
            c56.setEnabled(true);
            d56.setEnabled(true);
            i56.setEnabled(true);
        } else {
            h56.setEnabled(false);
            c56.setEnabled(false);
            d56.setEnabled(false);
            i56.setEnabled(false);
        }
        if (h57.isSelected()) {
            h57.setEnabled(true);
            c57.setEnabled(true);
            d57.setEnabled(true);
            i57.setEnabled(true);
        } else {
            h57.setEnabled(false);
            c57.setEnabled(false);
            d57.setEnabled(false);
            i57.setEnabled(false);
        }
        if (h58.isSelected()) {
            h58.setEnabled(true);
            c58.setEnabled(true);
            d58.setEnabled(true);
            i58.setEnabled(true);
        } else {
            h58.setEnabled(false);
            c58.setEnabled(false);
            d58.setEnabled(false);
            i58.setEnabled(false);
        }
        
        if (h60.isSelected()) {
            h60.setEnabled(true);
            c60.setEnabled(true);
            d60.setEnabled(true);
            i60.setEnabled(true);
        } else {
            h60.setEnabled(false);
            c60.setEnabled(false);
            d60.setEnabled(false);
            i60.setEnabled(false);
        }
        
        if (h61.isSelected()) {
            h61.setEnabled(true);
            c61.setEnabled(true);
            d61.setEnabled(true);
            i61.setEnabled(true);
        } else {
            h61.setEnabled(false);
            c61.setEnabled(false);
            d61.setEnabled(false);
            i61.setEnabled(false);
        }        
        if (h63.isSelected()) {
            h63.setEnabled(true);
            c63.setEnabled(true);
            d63.setEnabled(true);
            i63.setEnabled(true);
        } else {
            h63.setEnabled(false);
            c63.setEnabled(false);
            d63.setEnabled(false);
            i63.setEnabled(false);
        }
        if (h64.isSelected()) {
            h64.setEnabled(true);
            c64.setEnabled(true);
            d64.setEnabled(true);
            i64.setEnabled(true);
        } else {
            h64.setEnabled(false);
            c64.setEnabled(false);
            d64.setEnabled(false);
            i64.setEnabled(false);
        }
        if (h65.isSelected()) {
            h65.setEnabled(true);
            c65.setEnabled(true);
            d65.setEnabled(true);
            i65.setEnabled(true);
        } else {
            h65.setEnabled(false);
            c65.setEnabled(false);
            d65.setEnabled(false);
            i65.setEnabled(false);
        }
        if (h66.isSelected()) {
            h66.setEnabled(true);
            c66.setEnabled(true);
            d66.setEnabled(true);
            i66.setEnabled(true);

        } else {
            h66.setEnabled(false);
            c66.setEnabled(false);
            d66.setEnabled(false);
            i66.setEnabled(false);
        }
        if (h67.isSelected()) {
            h67.setEnabled(true);
            c67.setEnabled(true);
            d67.setEnabled(true);
            i67.setEnabled(true);
        } else {
            h67.setEnabled(false);
            c67.setEnabled(false);
            d67.setEnabled(false);
            i67.setEnabled(false);
        }
        if (h68.isSelected()) {
            h68.setEnabled(true);
            c68.setEnabled(true);
            d68.setEnabled(true);
            i68.setEnabled(true);
        } else {
            h68.setEnabled(false);
            c68.setEnabled(false);
            d68.setEnabled(false);
            i68.setEnabled(false);
        }if (h69.isSelected()) {
            h69.setEnabled(true);
            c69.setEnabled(true);
            d69.setEnabled(true);
            i69.setEnabled(true);
        } else {
            h69.setEnabled(false);
            c69.setEnabled(false);
            d69.setEnabled(false);
            i69.setEnabled(false);
        }     
        
        if (h54.isSelected() || h55.isSelected() || h56.isSelected()|| h57.isSelected()
                || h58.isSelected() 
                || h60.isSelected() || h61.isSelected() 
                || h63.isSelected() || h64.isSelected() || h65.isSelected() || h66.isSelected() ||
                h67.isSelected() || h68.isSelected() || h69.isSelected()){
            JOptionPane.showMessageDialog(null, "Por favor, evalue");
        }
}
    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed

        if (h54.isSelected() || h55.isSelected() || h56.isSelected()|| h57.isSelected()
                || h58.isSelected() 
                || h60.isSelected() || h61.isSelected() 
                || h63.isSelected() || h64.isSelected() || h65.isSelected() || h66.isSelected() ||
                h67.isSelected() || h68.isSelected() || h69.isSelected()){
            validarActivos();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_seleccionarActionPerformed

    private void h55ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h55ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_h55ActionPerformed

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Se caracterizan por haber pocos, frecuentemente uno sólo, ser económicamente gravosos"+sl+""
                + " y requerir un entorno específico para su operación. Son difícilmente reemplazables en caso "+sl+""
                + "de destrucción.","[host] Grandes equipos",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseEntered
        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Se caracterizan por haber varios, tener un coste económico medio tanto "+sl+""
                + "de adquisición como de mantenimiento e imponer requerimientos estándar "+sl+""
                + "como entorno de operación. No es difícil reemplazarlos en caso de destrucción.","[mid] Equipos medios",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel8MouseEntered

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Se caracterizan por ser multitud, tener un coste económico relativamente"+sl+""
                + " pequeño e imponer solamente unos requerimientos mínimos como "+sl+""
                + "entorno de operación. Son fácilmente reemplazables en caso de destrucción.","[pc] Informática personal ",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel9MouseEntered

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Se caracterizan por ser equipos afectos a la clasificación como "+sl+""
                + "informática personal que, además, son fácilmente transportables "+sl+""
                + "de un sitio a otro, pudiendo estar tanto dentro del recinto propio de la "+sl+""
                + "organización como en cualquier otro lugar.","[mobile] Informática móvil",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Son aquellos equipos preparados para hacerse cargo inmediato de los equipos en producción.","[backup] equipamiento de respaldo",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Dícese de impresoras y servidores de impresión.","[print] Medios de impresión",JOptionPane.INFORMATION_MESSAGE);
               
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Dícese de equipamiento necesario para transmitir datos: routers, módems, etc.","[network] Soporte de red ",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel13MouseEntered

    private void c54KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c54KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c54.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c54KeyTyped

    private void i54KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i54KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i54.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i54KeyTyped

    private void d54KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d54KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d54.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d54KeyTyped

    private void c55KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c55KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c55.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c55KeyTyped

    private void i55KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i55KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i55.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i55KeyTyped

    private void d55KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d55KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d55.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d55KeyTyped

    private void c56KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c56KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c56.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c56KeyTyped

    private void i56KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i56KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i56.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i56KeyTyped

    private void d56KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d56KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d56.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d56KeyTyped

    private void c57KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c57KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c57.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c57KeyTyped

    private void i57KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i57KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i57.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i57KeyTyped

    private void d57KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d57KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d57.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d57KeyTyped

    private void c58KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c58KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c58.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c58KeyTyped

    private void i58KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i58KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i58.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i58KeyTyped

    private void d58KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d58KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d58.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d58KeyTyped

    private void c60KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c60KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c60.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c60KeyTyped

    private void i60KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i60KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i60.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i60KeyTyped

    private void d60KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d60KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d60.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d60KeyTyped

    private void c61KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c61KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c61.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c61KeyTyped

    private void i61KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i61KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i61.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i61KeyTyped

    private void d61KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d61KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d61.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d61KeyTyped

    private void c63KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c63KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c63.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c63KeyTyped

    private void i63KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i63KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i63.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i63KeyTyped

    private void d63KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d63KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d63.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d63KeyTyped

    private void c64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c64KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c64.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c64KeyTyped

    private void i64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i64KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i64.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i64KeyTyped

    private void d64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d64KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d64.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d64KeyTyped

    private void c65KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c65KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c65.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c65KeyTyped

    private void i65KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i65KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i65.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i65KeyTyped

    private void d65KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d65KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d65.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d65KeyTyped

    private void c66KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c66KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c66.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c66KeyTyped

    private void i66KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i66KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i66.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i66KeyTyped

    private void d66KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d66KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d66.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d66KeyTyped

    private void c67KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c67KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c67.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c67KeyTyped

    private void i67KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i67KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i67.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i67KeyTyped

    private void d67KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d67KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d67.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d67KeyTyped

    private void c68KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c68KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c68.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c68KeyTyped

    private void i68KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i68KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i68.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i68KeyTyped

    private void d68KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d68KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d68.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d68KeyTyped

    private void c69KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c69KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c69.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c69KeyTyped

    private void i69KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i69KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i69.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i69KeyTyped

    private void d69KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d69KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d69.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d69KeyTyped

    private void d12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d12MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "La información no se pone a disposición ni se revela a individuos, entidades o procesos no autorizados.",
            "[Confidencialidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:
    }//GEN-LAST:event_d12MouseClicked

    private void d25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d25MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Mantenimiento de la exactitud y completitud de la información y sus métodos de proceso.",
            "[Integridad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_d25MouseClicked

    private void d26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d26MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Acceso y utilización de la información y los sistemas de tratamiento de la misma"
            +sl+ "por parte de los individuos, entidades o procesos autorizados cuando lo requieran.",
            "[Disponibilidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_d26MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked

        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro qué desea salir?", "¡Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (JOptionPane.YES_OPTION == resp) {
            JOptionPane.showMessageDialog(null, "Hasta pronto...", "Sistema de evaluación", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor continue con la evaluación", "Sistema de evaluación SGSI", JOptionPane.INFORMATION_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hardware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hardware().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inferior;
    private javax.swing.JPanel Principal;
    private javax.swing.JPanel Superior;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JLabel c;
    private javax.swing.JTextField c54;
    private javax.swing.JTextField c55;
    private javax.swing.JTextField c56;
    private javax.swing.JTextField c57;
    private javax.swing.JTextField c58;
    private javax.swing.JTextField c60;
    private javax.swing.JTextField c61;
    private javax.swing.JTextField c63;
    private javax.swing.JTextField c64;
    private javax.swing.JTextField c65;
    private javax.swing.JTextField c66;
    private javax.swing.JTextField c67;
    private javax.swing.JTextField c68;
    private javax.swing.JTextField c69;
    private javax.swing.JButton continuar2;
    private javax.swing.JLabel d;
    private javax.swing.JLabel d11;
    private javax.swing.JLabel d12;
    private javax.swing.JLabel d24;
    private javax.swing.JLabel d25;
    private javax.swing.JLabel d26;
    private javax.swing.JTextField d54;
    private javax.swing.JTextField d55;
    private javax.swing.JTextField d56;
    private javax.swing.JTextField d57;
    private javax.swing.JTextField d58;
    private javax.swing.JLabel d6;
    private javax.swing.JTextField d60;
    private javax.swing.JTextField d61;
    private javax.swing.JTextField d63;
    private javax.swing.JTextField d64;
    private javax.swing.JTextField d65;
    private javax.swing.JTextField d66;
    private javax.swing.JTextField d67;
    private javax.swing.JTextField d68;
    private javax.swing.JTextField d69;
    private javax.swing.JRadioButton h54;
    private javax.swing.JRadioButton h55;
    private javax.swing.JRadioButton h56;
    private javax.swing.JRadioButton h57;
    private javax.swing.JRadioButton h58;
    private javax.swing.JRadioButton h60;
    private javax.swing.JRadioButton h61;
    private javax.swing.JRadioButton h63;
    private javax.swing.JRadioButton h64;
    private javax.swing.JRadioButton h65;
    private javax.swing.JRadioButton h66;
    private javax.swing.JRadioButton h67;
    private javax.swing.JRadioButton h68;
    private javax.swing.JRadioButton h69;
    private javax.swing.JTextField i54;
    private javax.swing.JTextField i55;
    private javax.swing.JTextField i56;
    private javax.swing.JTextField i57;
    private javax.swing.JTextField i58;
    private javax.swing.JTextField i60;
    private javax.swing.JTextField i61;
    private javax.swing.JTextField i63;
    private javax.swing.JTextField i64;
    private javax.swing.JTextField i65;
    private javax.swing.JTextField i66;
    private javax.swing.JTextField i67;
    private javax.swing.JTextField i68;
    private javax.swing.JTextField i69;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton seleccionar;
    // End of variables declaration//GEN-END:variables
}
