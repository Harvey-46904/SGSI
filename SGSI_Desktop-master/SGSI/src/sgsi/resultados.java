/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgsi;

import java.sql.SQLException;
import javax.swing.DefaultListCellRenderer.UIResource;
import javax.swing.SwingConstants;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Family
 */
public class resultados extends javax.swing.JFrame {

    /**
     * Creates new form resultados
     */
    public resultados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(tabla);

        jButton1.setText("CREAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jButton1)
                .addContainerGap(242, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        tabla.setModel(listar());
        try {
            crearPDF("ee");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(resultados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(resultados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
   public javax.swing.DefaultListModel listar(){
       pkqControlador.clsConecta objConecta;
       objConecta=new pkqControlador.clsConecta();
javax.swing.DefaultListModel tem;
tem=new javax.swing.DefaultListModel();
try{
	java.sql.ResultSet hoja_resultado =null;
	String SQL = "select g.nombre as Grupo,i.nombre Item,r.confidencialidad,rc.descripcion as RECOMENDACION_CONFIDENCIALIDAD,r.integridad,ri.descripcion as RECOMENDACION_INTEGRIDAD,r.disponibilidad,rd.descripcion as RECOMENDACION_DISPONIBILIDAD from grupos g join item i join respuestas r join resultado_confidencialidad rc on r.id_pregunta=rc.id_pregunta and rc.estado=r.confidencialidad join resultado_integridad ri on r.id_pregunta=ri.id_pregunta and r.integridad=ri.estado join resultado_disponibilidad rd on r.id_pregunta=rd.id_pregunta and r.disponibilidad=rd.estado on i.codigo_pregunta=r.id_pregunta on i.fk_id_grupo=g.id_grupo";
	hoja_resultado=objConecta.consulta(SQL);
  
while(hoja_resultado.next()){
tem.addElement("========================================================");
tem.addElement("Grupo "+hoja_resultado.getString("grupo"));
tem.addElement(hoja_resultado.getString("item"));
tem.addElement("Confidencialidad: "+hoja_resultado.getString("confidencialidad"));
tem.addElement("Integridad: "+hoja_resultado.getString("integridad"));
tem.addElement("Disponibilidad: "+hoja_resultado.getString("disponibilidad"));
tem.addElement("RECOMENDACIONES");
tem.addElement(hoja_resultado.getString("RECOMENDACION_CONFIDENCIALIDAD"));  
tem.addElement(hoja_resultado.getString("RECOMENDACION_INTEGRIDAD"));  
tem.addElement(hoja_resultado.getString("RECOMENDACION_DISPONIBILIDAD"));  
}
}catch (SQLException ex){
	   System.out.println("error con sql");
}
return tem;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(resultados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new resultados().setVisible(true);
            }
        });
    }
 public void crearPDF(String ruta) throws FileNotFoundException, DocumentException {
        // Se crea el documento
     pkqControlador.clsConecta objConecta;
       objConecta=new pkqControlador.clsConecta();
       Document documento = new Document();
       FileOutputStream ficheroPDF = new FileOutputStream(ruta);
       PdfWriter.getInstance(documento, ficheroPDF); 
try{
    
	java.sql.ResultSet hoja_resultado =null;
	String SQL = "select g.nombre as Grupo,i.nombre Item,r.confidencialidad,rc.descripcion as RECOMENDACION_CONFIDENCIALIDAD,r.integridad,ri.descripcion as RECOMENDACION_INTEGRIDAD,r.disponibilidad,rd.descripcion as RECOMENDACION_DISPONIBILIDAD from grupos g join item i join respuestas r join resultado_confidencialidad rc on r.id_pregunta=rc.id_pregunta and rc.estado=r.confidencialidad join resultado_integridad ri on r.id_pregunta=ri.id_pregunta and r.integridad=ri.estado join resultado_disponibilidad rd on r.id_pregunta=rd.id_pregunta and r.disponibilidad=rd.estado on i.codigo_pregunta=r.id_pregunta on i.fk_id_grupo=g.id_grupo";
	hoja_resultado=objConecta.consulta(SQL);
      documento.open();
while(hoja_resultado.next()){
/*tem.addElement("========================================================");
 */
    Paragraph grupo = new Paragraph("Grupo "+hoja_resultado.getString("grupo")+"\n\n",
                FontFactory.getFont("arial",
                        12,
                        Font.BOLD,
                        BaseColor.BLUE
                        )
        );
    Paragraph item = new Paragraph(hoja_resultado.getString("item")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
    Paragraph confidencialidad = new Paragraph("Confidencialidad: "+hoja_resultado.getString("confidencialidad")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
      Paragraph integridad = new Paragraph("Integridad: "+hoja_resultado.getString("integridad")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
        Paragraph disponibilidad = new Paragraph("Disponibilidad: "+hoja_resultado.getString("disponibilidad")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
          Paragraph recomendaciones = new Paragraph("RECOMENDACIONES"+"\n\n",
                FontFactory.getFont("arial",
                        12,
                        Font.BOLD,
                        BaseColor.RED
                        )
        );
            Paragraph rc = new Paragraph(hoja_resultado.getString("RECOMENDACION_CONFIDENCIALIDAD")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
              Paragraph ri = new Paragraph(hoja_resultado.getString("RECOMENDACION_INTEGRIDAD")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
                Paragraph rd = new Paragraph(hoja_resultado.getString("RECOMENDACION_DISPONIBILIDAD")+"\n\n",
                FontFactory.getFont("arial",
                        10,
                        Font.CENTER_BASELINE,
                        BaseColor.BLACK
                        )
        );
                PdfPTable tabla = new PdfPTable(3);
        tabla.addCell("CONFIDENCIALIDAD");
        tabla.addCell("INTEGRIDAD");
        tabla.addCell("DISPONIBILIDAD");
        tabla.addCell(hoja_resultado.getString("confidencialidad"));
        tabla.addCell(hoja_resultado.getString("integridad"));
        tabla.addCell(hoja_resultado.getString("disponibilidad"));
        
        documento.add(grupo);
        documento.add(item);
       // documento.add(confidencialidad);
        //documento.add(integridad);
        //documento.add(disponibilidad); 
        documento.add(tabla);
        documento.add(recomendaciones);
        documento.add(rc);
        documento.add(ri);
        documento.add(rd);
           
}
   documento.close();
}catch (SQLException ex){
	   System.out.println("error con sql");
}
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList tabla;
    // End of variables declaration//GEN-END:variables
}
