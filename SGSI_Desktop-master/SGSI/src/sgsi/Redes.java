/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgsi;

import javax.swing.JOptionPane;

/**
 *
 * @author Luis Efe
 */
public class Redes extends javax.swing.JFrame {

    /**
     * Creates new form activos_esenciales
     */
    public Redes() {
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Principal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        i70 = new javax.swing.JTextField();
        d70 = new javax.swing.JTextField();
        c70 = new javax.swing.JTextField();
        c71 = new javax.swing.JTextField();
        d71 = new javax.swing.JTextField();
        i71 = new javax.swing.JTextField();
        c72 = new javax.swing.JTextField();
        d72 = new javax.swing.JTextField();
        i72 = new javax.swing.JTextField();
        c73 = new javax.swing.JTextField();
        d73 = new javax.swing.JTextField();
        i73 = new javax.swing.JTextField();
        c74 = new javax.swing.JTextField();
        d74 = new javax.swing.JTextField();
        i74 = new javax.swing.JTextField();
        c75 = new javax.swing.JTextField();
        d75 = new javax.swing.JTextField();
        i75 = new javax.swing.JTextField();
        c76 = new javax.swing.JTextField();
        d76 = new javax.swing.JTextField();
        i76 = new javax.swing.JTextField();
        c77 = new javax.swing.JTextField();
        d77 = new javax.swing.JTextField();
        i77 = new javax.swing.JTextField();
        c78 = new javax.swing.JTextField();
        d78 = new javax.swing.JTextField();
        i78 = new javax.swing.JTextField();
        c79 = new javax.swing.JTextField();
        d79 = new javax.swing.JTextField();
        i79 = new javax.swing.JTextField();
        c80 = new javax.swing.JTextField();
        d80 = new javax.swing.JTextField();
        i80 = new javax.swing.JTextField();
        c81 = new javax.swing.JTextField();
        d81 = new javax.swing.JTextField();
        i81 = new javax.swing.JTextField();
        r70 = new javax.swing.JRadioButton();
        r71 = new javax.swing.JRadioButton();
        r72 = new javax.swing.JRadioButton();
        r73 = new javax.swing.JRadioButton();
        r74 = new javax.swing.JRadioButton();
        r75 = new javax.swing.JRadioButton();
        r76 = new javax.swing.JRadioButton();
        r77 = new javax.swing.JRadioButton();
        r78 = new javax.swing.JRadioButton();
        r79 = new javax.swing.JRadioButton();
        r80 = new javax.swing.JRadioButton();
        r81 = new javax.swing.JRadioButton();
        Superior = new javax.swing.JPanel();
        a = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        Inferior = new javax.swing.JPanel();
        d6 = new javax.swing.JLabel();
        d24 = new javax.swing.JLabel();
        seleccionar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        continuar2 = new javax.swing.JButton();
        d11 = new javax.swing.JLabel();
        d12 = new javax.swing.JLabel();
        d25 = new javax.swing.JLabel();
        d26 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Redes");
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        Principal.setBorder(javax.swing.BorderFactory.createTitledBorder("[COM] Redes de comunicaciones"));

        jLabel4.setText("Nombre");

        jLabel5.setText("Confianza");

        jLabel6.setText("Integridad");

        jLabel7.setText("Disponibilidad");

        i70.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i70KeyTyped(evt);
            }
        });

        d70.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d70ActionPerformed(evt);
            }
        });
        d70.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d70KeyTyped(evt);
            }
        });

        c70.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c70KeyTyped(evt);
            }
        });

        c71.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c71KeyTyped(evt);
            }
        });

        d71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d71ActionPerformed(evt);
            }
        });
        d71.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d71KeyTyped(evt);
            }
        });

        i71.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i71KeyTyped(evt);
            }
        });

        c72.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c72KeyTyped(evt);
            }
        });

        d72.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d72ActionPerformed(evt);
            }
        });
        d72.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d72KeyTyped(evt);
            }
        });

        i72.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i72KeyTyped(evt);
            }
        });

        c73.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c73KeyTyped(evt);
            }
        });

        d73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d73ActionPerformed(evt);
            }
        });
        d73.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d73KeyTyped(evt);
            }
        });

        i73.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i73KeyTyped(evt);
            }
        });

        c74.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c74KeyTyped(evt);
            }
        });

        d74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d74ActionPerformed(evt);
            }
        });
        d74.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d74KeyTyped(evt);
            }
        });

        i74.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i74KeyTyped(evt);
            }
        });

        c75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c75KeyTyped(evt);
            }
        });

        d75.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d75ActionPerformed(evt);
            }
        });
        d75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d75KeyTyped(evt);
            }
        });

        i75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i75KeyTyped(evt);
            }
        });

        c76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c76KeyTyped(evt);
            }
        });

        d76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d76ActionPerformed(evt);
            }
        });
        d76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d76KeyTyped(evt);
            }
        });

        i76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i76KeyTyped(evt);
            }
        });

        c77.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c77KeyTyped(evt);
            }
        });

        d77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d77ActionPerformed(evt);
            }
        });
        d77.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d77KeyTyped(evt);
            }
        });

        i77.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i77KeyTyped(evt);
            }
        });

        c78.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c78KeyTyped(evt);
            }
        });

        d78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d78ActionPerformed(evt);
            }
        });
        d78.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d78KeyTyped(evt);
            }
        });

        i78.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i78KeyTyped(evt);
            }
        });

        c79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c79ActionPerformed(evt);
            }
        });
        c79.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c79KeyTyped(evt);
            }
        });

        d79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d79ActionPerformed(evt);
            }
        });
        d79.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d79KeyTyped(evt);
            }
        });

        i79.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i79KeyTyped(evt);
            }
        });

        c80.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c80KeyTyped(evt);
            }
        });

        d80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d80ActionPerformed(evt);
            }
        });
        d80.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d80KeyTyped(evt);
            }
        });

        i80.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i80KeyTyped(evt);
            }
        });

        c81.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c81KeyTyped(evt);
            }
        });

        d81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d81ActionPerformed(evt);
            }
        });
        d81.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d81KeyTyped(evt);
            }
        });

        i81.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i81KeyTyped(evt);
            }
        });

        r70.setText("[PSNT] Red telefónica");

        r71.setText("[ISDN] Rdsi (red digital)");
        r71.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r71ActionPerformed(evt);
            }
        });

        r72.setText("[X25] x25 (red de datos)");

        r73.setText("[ADSL] ADSL");

        r74.setText("[pp] Punto a punto");

        r75.setText("[radio] Comunicaciones radio");

        r76.setText("[wifi] Red inalámbrica");
        r76.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r76ActionPerformed(evt);
            }
        });

        r77.setText("[mobile] Telefonía Móvil");

        r78.setText("[sat] Por satélite");

        r79.setText("[LAN] Red local");

        r80.setText("[MAN] Red metropolitana");
        r80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r80ActionPerformed(evt);
            }
        });

        r81.setText("[Internet] Internet");

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGap(205, 205, 205)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4))
                    .addComponent(r70)
                    .addComponent(r71)
                    .addComponent(r73)
                    .addComponent(r72)
                    .addComponent(r74)
                    .addComponent(r75)
                    .addComponent(r76)
                    .addComponent(r77)
                    .addComponent(r78)
                    .addComponent(r79)
                    .addComponent(r80)
                    .addComponent(r81))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c81, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i81, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d81, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                    .addComponent(c70, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i70, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d70, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                    .addComponent(c71, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i71, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d71, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c72, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i72, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d72, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c73, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i73, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d73, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c74, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i74, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d74, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c75, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i75, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d75, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c76, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i76, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d76, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c77, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i77, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d77, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c78, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i78, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d78, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c79, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i79, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d79, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(c80, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i80, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d80, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(187, 187, 187))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r71))
                .addGap(6, 6, 6)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r72))
                .addGap(3, 3, 3)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r73))
                .addGap(6, 6, 6)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r74))
                .addGap(1, 1, 1)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r75))
                .addGap(2, 2, 2)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r76))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i77, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d77, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c77, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r77))
                .addGap(6, 6, 6)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r78))
                .addGap(8, 8, 8)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i79, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d79, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c79, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r79))
                .addGap(8, 8, 8)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r80))
                .addGap(3, 3, 3)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r81))
                .addContainerGap())
        );

        Superior.setBackground(new java.awt.Color(53, 96, 183));

        a.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        a.setForeground(new java.awt.Color(255, 255, 255));
        a.setText("Módulo [Redes de comunicaciones]");

        c.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));
        c.setText("Para continuar por favor no olvide que como paso inicial debe marcar los activos con los cuales cuente su organización, posteriormente dar click en \"Seleccionar y evaluar\"");

        b.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        b.setForeground(new java.awt.Color(255, 255, 255));
        b.setText("y luego debe asignar valores entre 0 y 9  de acuerdo al conocimiento que tenga sobre los niveles de confidencialidad, integridad y disponibilidad de los mismos .");

        d.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d.setForeground(new java.awt.Color(255, 255, 255));
        d.setText("Nota: Para más información sobre los activos click en los signos de interrogación. Recuerde que (0) es el valor más bajo y (9) es el valor más alto de valoración. ");

        javax.swing.GroupLayout SuperiorLayout = new javax.swing.GroupLayout(Superior);
        Superior.setLayout(SuperiorLayout);
        SuperiorLayout.setHorizontalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SuperiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b)
                    .addComponent(c)
                    .addComponent(d))
                .addContainerGap())
        );
        SuperiorLayout.setVerticalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c)
                .addGap(2, 2, 2)
                .addComponent(b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        Inferior.setBackground(new java.awt.Color(173, 15, 55));

        d6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 255, 255));
        d6.setText("Desarrollado por: Luis Fernando Díaz Muñoz - Juan Sebastián Erazo Chamorro");

        d24.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d24.setForeground(new java.awt.Color(255, 255, 255));
        d24.setText("Ingeniería de sistemas");

        javax.swing.GroupLayout InferiorLayout = new javax.swing.GroupLayout(Inferior);
        Inferior.setLayout(InferiorLayout);
        InferiorLayout.setHorizontalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                        .addComponent(d24)
                        .addGap(162, 162, 162)))
                .addGap(218, 218, 218))
        );
        InferiorLayout.setVerticalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        seleccionar.setText("Seleccionar y evaluar");
        seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seleccionarMouseClicked(evt);
            }
        });
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        limpiar.setText("Limpiar");
        limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiarMouseClicked(evt);
            }
        });
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        continuar2.setText("Continuar");
        continuar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continuar2MouseClicked(evt);
            }
        });
        continuar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuar2ActionPerformed(evt);
            }
        });

        d11.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d11.setText("Info (Click en etiquetas):");

        d12.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d12.setText("Confidencialidad ||");
        d12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d12MouseClicked(evt);
            }
        });

        d25.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d25.setText("Integridad ||");
        d25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d25MouseClicked(evt);
            }
        });

        d26.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d26.setText("Disponibilidad");
        d26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d26MouseClicked(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Inferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Superior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(d11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(continuar2)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(continuar2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(seleccionar)
                        .addComponent(limpiar)
                        .addComponent(jButton5))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d11)
                        .addComponent(d12)
                        .addComponent(d25)
                        .addComponent(d26)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void continuar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuar2MouseClicked

        if (r70.isSelected()||r71.isSelected()||r72.isSelected()||r73.isSelected()||r74.isSelected()||r75.isSelected()
                || r76.isSelected()||r77.isSelected()||r78.isSelected()||r79.isSelected()||r80.isSelected()||r81.isSelected()){
            Principal principal = new Principal();        
        principal.setVisible(true);
        this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_continuar2MouseClicked

    private void continuar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_continuar2ActionPerformed

    private void limpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarMouseClicked

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed

        seleccionar.setEnabled(true);
        r70.setSelected(false);
        r70.setEnabled(true);
        c70.setEnabled(true);
        d70.setEnabled(true);
        i70.setEnabled(true);

        r71.setSelected(false);
        r71.setEnabled(true);
        c71.setEnabled(true);
        d71.setEnabled(true);
        i71.setEnabled(true);

        r72.setSelected(false);
        r72.setEnabled(true);
        c72.setEnabled(true);
        d72.setEnabled(true);
        i72.setEnabled(true);

        r73.setSelected(false);
        r73.setEnabled(true);
        c73.setEnabled(true);
        d73.setEnabled(true);
        i73.setEnabled(true);

        r74.setSelected(false);
        r74.setEnabled(true);
        c74.setEnabled(true);
        d74.setEnabled(true);
        i74.setEnabled(true);

        r75.setSelected(false);
        r75.setEnabled(true);
        c75.setEnabled(true);
        d75.setEnabled(true);
        i75.setEnabled(true);

        r76.setSelected(false);
        r76.setEnabled(true);
        c76.setEnabled(true);
        d76.setEnabled(true);
        i76.setEnabled(true);

        r77.setSelected(false);
        r77.setEnabled(true);
        c77.setEnabled(true);
        d77.setEnabled(true);
        i77.setEnabled(true);

        r78.setSelected(false);
        r78.setEnabled(true);
        c78.setEnabled(true);
        d78.setEnabled(true);
        i78.setEnabled(true);

        r79.setSelected(false);
        r79.setEnabled(true);
        c79.setEnabled(true);
        d79.setEnabled(true);
        i79.setEnabled(true);

        r80.setSelected(false);
        r80.setEnabled(true);
        c80.setEnabled(true);
        d80.setEnabled(true);
        i80.setEnabled(true);

        r81.setSelected(false);
        r81.setEnabled(true);
        c81.setEnabled(true);
        d81.setEnabled(true);
        i81.setEnabled(true);
    }//GEN-LAST:event_limpiarActionPerformed

    private void seleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seleccionarMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarMouseClicked

    public void validarActivos() {
        seleccionar.setEnabled(false);
        if (r70.isSelected()) {
            r70.setEnabled(true);
            c70.setEnabled(true);
            d70.setEnabled(true);
            i70.setEnabled(true);
        } else {
            r70.setEnabled(false);
            c70.setEnabled(false);
            d70.setEnabled(false);
            i70.setEnabled(false);
        }
        if (r71.isSelected()) {
            r71.setEnabled(true);
            c71.setEnabled(true);
            d71.setEnabled(true);
            i71.setEnabled(true);
        } else {
            r71.setEnabled(false);            
            c71.setEnabled(false);
            d71.setEnabled(false);
            i71.setEnabled(false);
        }
        if (r72.isSelected()) {
            r72.setEnabled(true);
            c72.setEnabled(true);
            d72.setEnabled(true);
            i72.setEnabled(true);
        } else {
            r72.setEnabled(false);
            c72.setEnabled(false);
            d72.setEnabled(false);
            i72.setEnabled(false);
        }
        if (r73.isSelected()) {
            r73.setEnabled(true);
            c73.setEnabled(true);
            d73.setEnabled(true);
            i73.setEnabled(true);
        } else {
            r73.setEnabled(false);
            c73.setEnabled(false);
            d73.setEnabled(false);
            i73.setEnabled(false);
        }
        if (r74.isSelected()) {
            r74.setEnabled(true);
            c74.setEnabled(true);
            d74.setEnabled(true);
            i74.setEnabled(true);
        } else {
            r74.setEnabled(false);
            c74.setEnabled(false);
            d74.setEnabled(false);
            i74.setEnabled(false);
        }

        if (r75.isSelected()) {
            r75.setEnabled(true);
            c75.setEnabled(true);
            d75.setEnabled(true);
            i75.setEnabled(true);
        } else {
            r75.setEnabled(false);
            c75.setEnabled(false);
            d75.setEnabled(false);
            i75.setEnabled(false);
        }
        
        if (r76.isSelected()) {
            r76.setEnabled(true);
            c76.setEnabled(true);
            d76.setEnabled(true);
            i76.setEnabled(true);
        } else {
            r76.setEnabled(false);
            c76.setEnabled(false);
            d76.setEnabled(false);
            i76.setEnabled(false);
        }
        
        if (r77.isSelected()) {
            r77.setEnabled(true);
            c77.setEnabled(true);
            d77.setEnabled(true);
            i77.setEnabled(true);
        } else {
            r77.setEnabled(false);
            c77.setEnabled(false);
            d77.setEnabled(false);
            i77.setEnabled(false);
        }
        
        if (r77.isSelected()) {
            r77.setEnabled(true);
            c77.setEnabled(true);
            d77.setEnabled(true);
            i77.setEnabled(true);
        } else {
            r77.setEnabled(false);
            c77.setEnabled(false);
            d77.setEnabled(false);
            i77.setEnabled(false);
        }

        if (r78.isSelected()) {
            r78.setEnabled(true);
            c78.setEnabled(true);
            d78.setEnabled(true);
            i78.setEnabled(true);
        } else {
            r78.setEnabled(false);
            c78.setEnabled(false);
            d78.setEnabled(false);
            i78.setEnabled(false);
        }
        if (r79.isSelected()) {
            r79.setEnabled(true);
            c79.setEnabled(true);
            d79.setEnabled(true);
            i79.setEnabled(true);
        } else {
            r79.setEnabled(false);
            c79.setEnabled(false);
            d79.setEnabled(false);
            i79.setEnabled(false);
        }
        if (r80.isSelected()) {
            r80.setEnabled(true);
            c80.setEnabled(true);
            d80.setEnabled(true);
            i80.setEnabled(true);
        } else {
            r80.setEnabled(false);
            c80.setEnabled(false);
            d80.setEnabled(false);
            i80.setEnabled(false);
        }
        if (r81.isSelected()) {
            r81.setEnabled(true);
            c81.setEnabled(true);
            d81.setEnabled(true);
            i81.setEnabled(true);
        } else {
            r81.setEnabled(false);
            c81.setEnabled(false);
            d81.setEnabled(false);
            i81.setEnabled(false);
        }        
        if (r70.isSelected() || r71.isSelected() || r72.isSelected()|| r73.isSelected()
                || r74.isSelected() || r75.isSelected() 
                || r76.isSelected() || r77.isSelected() || r78.isSelected()
                || r79.isSelected() || r80.isSelected() || r81.isSelected()){
            JOptionPane.showMessageDialog(null, "Por favor, evalue");
        }
    }
    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed

        if (r70.isSelected()||r71.isSelected()||r72.isSelected()||r73.isSelected()||r74.isSelected()||r75.isSelected()
                || r76.isSelected()||r77.isSelected()||r78.isSelected()||r79.isSelected()||r80.isSelected()||r81.isSelected()){
            validarActivos();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_seleccionarActionPerformed

    private void r80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r80ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r80ActionPerformed

    private void r76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r76ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r76ActionPerformed

    private void r71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r71ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r71ActionPerformed

    private void d81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d81ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d81ActionPerformed

    private void d80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d80ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d80ActionPerformed

    private void d79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d79ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d79ActionPerformed

    private void d78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d78ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d78ActionPerformed

    private void d77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d77ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d77ActionPerformed

    private void d76ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d76ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d76ActionPerformed

    private void d75ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d75ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d75ActionPerformed

    private void d74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d74ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d74ActionPerformed

    private void d73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d73ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d73ActionPerformed

    private void d72ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d72ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d72ActionPerformed

    private void d71ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d71ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d71ActionPerformed

    private void d70ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d70ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d70ActionPerformed

    private void c79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c79ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c79ActionPerformed

    private void c70KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c70KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c70.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c70KeyTyped

    private void i70KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i70KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i70.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i70KeyTyped

    private void d70KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d70KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d70.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d70KeyTyped

    private void c71KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c71KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c71.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c71KeyTyped

    private void i71KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i71KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i71.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i71KeyTyped

    private void d71KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d71KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d71.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d71KeyTyped

    private void c72KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c72KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c72.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c72KeyTyped

    private void i72KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i72KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i72.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i72KeyTyped

    private void d72KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d72KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d72.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d72KeyTyped

    private void c73KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c73KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c73.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c73KeyTyped

    private void i73KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i73KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i73.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i73KeyTyped

    private void d73KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d73KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d73.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d73KeyTyped

    private void c74KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c74KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c74.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c74KeyTyped

    private void i74KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i74KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i74.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i74KeyTyped

    private void d74KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d74KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d74.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d74KeyTyped

    private void c75KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c75KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c75.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c75KeyTyped

    private void i75KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i75KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i75.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i75KeyTyped

    private void d75KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d75KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d75.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d75KeyTyped

    private void c76KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c76KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c76.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c76KeyTyped

    private void i76KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i76KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i76.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i76KeyTyped

    private void d76KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d76KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d76.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d76KeyTyped

    private void c77KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c77KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c77.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c77KeyTyped

    private void i77KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i77KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i77.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i77KeyTyped

    private void d77KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d77KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d77.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d77KeyTyped

    private void c78KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c78KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c78.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c78KeyTyped

    private void i78KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i78KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i78.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i78KeyTyped

    private void d78KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d78KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d78.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d78KeyTyped

    private void c79KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c79KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c79.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c79KeyTyped

    private void i79KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i79KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i79.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i79KeyTyped

    private void d79KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d79KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d79.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d79KeyTyped

    private void c80KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c80KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c80.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c80KeyTyped

    private void i80KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i80KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i80.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i80KeyTyped

    private void d80KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d80KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d80.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d80KeyTyped

    private void c81KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c81KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c81.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c81KeyTyped

    private void i81KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i81KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i81.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i81KeyTyped

    private void d81KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d81KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d81.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d81KeyTyped

    private void d12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d12MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "La información no se pone a disposición ni se revela a individuos, entidades o procesos no autorizados.",
            "[Confidencialidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:
    }//GEN-LAST:event_d12MouseClicked

    private void d25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d25MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Mantenimiento de la exactitud y completitud de la información y sus métodos de proceso.",
            "[Integridad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_d25MouseClicked

    private void d26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d26MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Acceso y utilización de la información y los sistemas de tratamiento de la misma"
            +sl+ "por parte de los individuos, entidades o procesos autorizados cuando lo requieran.",
            "[Disponibilidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_d26MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked

        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro qué desea salir?", "¡Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (JOptionPane.YES_OPTION == resp) {
            JOptionPane.showMessageDialog(null, "Hasta pronto...", "Sistema de evaluación", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor continue con la evaluación", "Sistema de evaluación SGSI", JOptionPane.INFORMATION_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Redes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Redes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Redes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Redes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Redes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inferior;
    private javax.swing.JPanel Principal;
    private javax.swing.JPanel Superior;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JLabel c;
    private javax.swing.JTextField c70;
    private javax.swing.JTextField c71;
    private javax.swing.JTextField c72;
    private javax.swing.JTextField c73;
    private javax.swing.JTextField c74;
    private javax.swing.JTextField c75;
    private javax.swing.JTextField c76;
    private javax.swing.JTextField c77;
    private javax.swing.JTextField c78;
    private javax.swing.JTextField c79;
    private javax.swing.JTextField c80;
    private javax.swing.JTextField c81;
    private javax.swing.JButton continuar2;
    private javax.swing.JLabel d;
    private javax.swing.JLabel d11;
    private javax.swing.JLabel d12;
    private javax.swing.JLabel d24;
    private javax.swing.JLabel d25;
    private javax.swing.JLabel d26;
    private javax.swing.JLabel d6;
    private javax.swing.JTextField d70;
    private javax.swing.JTextField d71;
    private javax.swing.JTextField d72;
    private javax.swing.JTextField d73;
    private javax.swing.JTextField d74;
    private javax.swing.JTextField d75;
    private javax.swing.JTextField d76;
    private javax.swing.JTextField d77;
    private javax.swing.JTextField d78;
    private javax.swing.JTextField d79;
    private javax.swing.JTextField d80;
    private javax.swing.JTextField d81;
    private javax.swing.JTextField i70;
    private javax.swing.JTextField i71;
    private javax.swing.JTextField i72;
    private javax.swing.JTextField i73;
    private javax.swing.JTextField i74;
    private javax.swing.JTextField i75;
    private javax.swing.JTextField i76;
    private javax.swing.JTextField i77;
    private javax.swing.JTextField i78;
    private javax.swing.JTextField i79;
    private javax.swing.JTextField i80;
    private javax.swing.JTextField i81;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton limpiar;
    private javax.swing.JRadioButton r70;
    private javax.swing.JRadioButton r71;
    private javax.swing.JRadioButton r72;
    private javax.swing.JRadioButton r73;
    private javax.swing.JRadioButton r74;
    private javax.swing.JRadioButton r75;
    private javax.swing.JRadioButton r76;
    private javax.swing.JRadioButton r77;
    private javax.swing.JRadioButton r78;
    private javax.swing.JRadioButton r79;
    private javax.swing.JRadioButton r80;
    private javax.swing.JRadioButton r81;
    private javax.swing.JButton seleccionar;
    // End of variables declaration//GEN-END:variables
}
