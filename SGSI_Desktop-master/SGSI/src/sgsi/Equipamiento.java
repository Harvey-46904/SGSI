/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgsi;

import javax.swing.JOptionPane;

/**
 *
 * @author Luis Efe
 */
public class Equipamiento extends javax.swing.JFrame {

    /**
     * Creates new form activos_esenciales
     */
    public Equipamiento() {
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Principal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        i96 = new javax.swing.JTextField();
        d96 = new javax.swing.JTextField();
        c96 = new javax.swing.JTextField();
        c97 = new javax.swing.JTextField();
        d97 = new javax.swing.JTextField();
        i97 = new javax.swing.JTextField();
        c98 = new javax.swing.JTextField();
        d98 = new javax.swing.JTextField();
        i98 = new javax.swing.JTextField();
        i99 = new javax.swing.JTextField();
        d99 = new javax.swing.JTextField();
        c99 = new javax.swing.JTextField();
        i100 = new javax.swing.JTextField();
        d100 = new javax.swing.JTextField();
        c100 = new javax.swing.JTextField();
        i101 = new javax.swing.JTextField();
        d101 = new javax.swing.JTextField();
        c101 = new javax.swing.JTextField();
        i102 = new javax.swing.JTextField();
        d102 = new javax.swing.JTextField();
        c102 = new javax.swing.JTextField();
        i103 = new javax.swing.JTextField();
        d103 = new javax.swing.JTextField();
        c103 = new javax.swing.JTextField();
        i104 = new javax.swing.JTextField();
        d104 = new javax.swing.JTextField();
        c104 = new javax.swing.JTextField();
        i105 = new javax.swing.JTextField();
        d105 = new javax.swing.JTextField();
        c105 = new javax.swing.JTextField();
        i106 = new javax.swing.JTextField();
        d106 = new javax.swing.JTextField();
        c106 = new javax.swing.JTextField();
        e96 = new javax.swing.JRadioButton();
        e97 = new javax.swing.JRadioButton();
        e98 = new javax.swing.JRadioButton();
        e99 = new javax.swing.JRadioButton();
        e100 = new javax.swing.JRadioButton();
        e101 = new javax.swing.JRadioButton();
        e102 = new javax.swing.JRadioButton();
        e103 = new javax.swing.JRadioButton();
        e104 = new javax.swing.JRadioButton();
        e105 = new javax.swing.JRadioButton();
        e106 = new javax.swing.JRadioButton();
        Superior = new javax.swing.JPanel();
        a = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        Inferior = new javax.swing.JPanel();
        d6 = new javax.swing.JLabel();
        d24 = new javax.swing.JLabel();
        limpiar = new javax.swing.JButton();
        seleccionar = new javax.swing.JButton();
        continuar2 = new javax.swing.JButton();
        d11 = new javax.swing.JLabel();
        d12 = new javax.swing.JLabel();
        d25 = new javax.swing.JLabel();
        d26 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Equipamiento auxiliar");
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jLabel4.setText("Nombre");

        jLabel5.setText("Confianza");

        jLabel6.setText("Integridad");

        jLabel7.setText("Disponibilidad");

        i96.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i96KeyTyped(evt);
            }
        });

        d96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d96ActionPerformed(evt);
            }
        });
        d96.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d96KeyTyped(evt);
            }
        });

        c96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c96ActionPerformed(evt);
            }
        });
        c96.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c96KeyTyped(evt);
            }
        });

        c97.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c97KeyTyped(evt);
            }
        });

        d97.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d97ActionPerformed(evt);
            }
        });
        d97.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d97KeyTyped(evt);
            }
        });

        i97.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i97KeyTyped(evt);
            }
        });

        c98.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c98KeyTyped(evt);
            }
        });

        d98.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d98ActionPerformed(evt);
            }
        });
        d98.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d98KeyTyped(evt);
            }
        });

        i98.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i98KeyTyped(evt);
            }
        });

        i99.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i99KeyTyped(evt);
            }
        });

        d99.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d99ActionPerformed(evt);
            }
        });
        d99.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d99KeyTyped(evt);
            }
        });

        c99.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c99KeyTyped(evt);
            }
        });

        i100.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i100KeyTyped(evt);
            }
        });

        d100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d100ActionPerformed(evt);
            }
        });
        d100.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d100KeyTyped(evt);
            }
        });

        c100.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c100KeyTyped(evt);
            }
        });

        i101.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i101KeyTyped(evt);
            }
        });

        d101.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d101ActionPerformed(evt);
            }
        });
        d101.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d101KeyTyped(evt);
            }
        });

        c101.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c101KeyTyped(evt);
            }
        });

        i102.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i102KeyTyped(evt);
            }
        });

        d102.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d102ActionPerformed(evt);
            }
        });
        d102.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d102KeyTyped(evt);
            }
        });

        c102.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c102KeyTyped(evt);
            }
        });

        i103.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i103KeyTyped(evt);
            }
        });

        d103.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d103ActionPerformed(evt);
            }
        });
        d103.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d103KeyTyped(evt);
            }
        });

        c103.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c103KeyTyped(evt);
            }
        });

        i104.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i104KeyTyped(evt);
            }
        });

        d104.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d104ActionPerformed(evt);
            }
        });
        d104.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d104KeyTyped(evt);
            }
        });

        c104.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c104KeyTyped(evt);
            }
        });

        i105.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i105KeyTyped(evt);
            }
        });

        d105.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d105ActionPerformed(evt);
            }
        });
        d105.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d105KeyTyped(evt);
            }
        });

        c105.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c105KeyTyped(evt);
            }
        });

        i106.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i106ActionPerformed(evt);
            }
        });
        i106.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i106KeyTyped(evt);
            }
        });

        d106.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d106ActionPerformed(evt);
            }
        });
        d106.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d106KeyTyped(evt);
            }
        });

        c106.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c106KeyTyped(evt);
            }
        });

        e96.setText("[power] Fuentes de alimentación");
        e96.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e96ActionPerformed(evt);
            }
        });

        e97.setText("[ups] Sistemas de alimentación ininterrumpida");

        e98.setText("[gen] Generadores eléctricos");

        e99.setText("[ac] Equipos de climatización");

        e100.setText("[cabling] Cableado");

        e101.setText("[wire] Cable eléctrico");
        e101.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e101ActionPerformed(evt);
            }
        });

        e102.setText("[fiber] Fibra óptica");

        e103.setText("[supply] suministros esenciales");

        e104.setText("[destroy] Equipos de destrucción de soportes de información");

        e105.setText("[furniture] Mobiliario: armarios, etc");

        e106.setText("[safe] Cajas fuertes");

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(e104)
                                .addComponent(e102, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(e103, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(e97, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(e96, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(e105)
                            .addComponent(e106)
                            .addComponent(e101)
                            .addComponent(e100)
                            .addComponent(e99)
                            .addComponent(e98))
                        .addGap(45, 45, 45)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                .addComponent(c96, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(i96, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(d96, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(PrincipalLayout.createSequentialGroup()
                                                    .addComponent(c97, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(41, 41, 41)
                                                    .addComponent(i97, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(49, 49, 49)
                                                    .addComponent(d97, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(PrincipalLayout.createSequentialGroup()
                                                    .addComponent(c98, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(41, 41, 41)
                                                    .addComponent(i98, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(49, 49, 49)
                                                    .addComponent(d98, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                                .addComponent(c99, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(41, 41, 41)
                                                .addComponent(i99, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(49, 49, 49)
                                                .addComponent(d99, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(PrincipalLayout.createSequentialGroup()
                                            .addComponent(c100, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(41, 41, 41)
                                            .addComponent(i100, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(49, 49, 49)
                                            .addComponent(d100, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(PrincipalLayout.createSequentialGroup()
                                            .addComponent(c101, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(41, 41, 41)
                                            .addComponent(i101, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(49, 49, 49)
                                            .addComponent(d101, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(PrincipalLayout.createSequentialGroup()
                                            .addComponent(c102, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(41, 41, 41)
                                            .addComponent(i102, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(49, 49, 49)
                                            .addComponent(d102, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(PrincipalLayout.createSequentialGroup()
                                            .addComponent(c103, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(41, 41, 41)
                                            .addComponent(i103, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(49, 49, 49)
                                            .addComponent(d103, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addComponent(c104, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(i104, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(d104, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c105, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i105, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d105, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c106, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i106, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d106, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(179, 179, 179))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i96, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d96, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c96, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i97, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d97, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c97, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i98, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d98, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c98, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i99, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d99, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c99, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c101, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i102, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d102, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c102, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c103, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c104, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e104))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c105, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c106, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addComponent(e96)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(e97)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(e98)
                        .addGap(9, 9, 9)
                        .addComponent(e99)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e100)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e101)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(e102)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(e103)
                        .addGap(41, 41, 41)
                        .addComponent(e105)
                        .addGap(3, 3, 3)
                        .addComponent(e106)))
                .addContainerGap())
        );

        Superior.setBackground(new java.awt.Color(53, 96, 183));

        a.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        a.setForeground(new java.awt.Color(255, 255, 255));
        a.setText("Módulo equipamiento auxiliar");

        c.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));
        c.setText("Para continuar por favor no olvide que como paso inicial debe marcar los activos con los cuales cuente su organización, posteriormente dar click en \"Seleccionar y evaluar\"");

        b.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        b.setForeground(new java.awt.Color(255, 255, 255));
        b.setText("y luego debe asignar valores entre 0 y 9  de acuerdo al conocimiento que tenga sobre los niveles de confidencialidad, integridad y disponibilidad de los mismos .");

        d.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d.setForeground(new java.awt.Color(255, 255, 255));
        d.setText("Nota: Para más información sobre los activos click en los signos de interrogación. Recuerde que (0) es el valor más bajo y (9) es el valor más alto de valoración. ");

        javax.swing.GroupLayout SuperiorLayout = new javax.swing.GroupLayout(Superior);
        Superior.setLayout(SuperiorLayout);
        SuperiorLayout.setHorizontalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a)
                    .addComponent(b)
                    .addComponent(c)
                    .addComponent(d))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SuperiorLayout.setVerticalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(c)
                .addGap(2, 2, 2)
                .addComponent(b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d)
                .addContainerGap())
        );

        Inferior.setBackground(new java.awt.Color(173, 15, 55));

        d6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 255, 255));
        d6.setText("Desarrollado por: Luis Fernando Díaz Muñoz - Juan Sebastián Erazo Chamorro");

        d24.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d24.setForeground(new java.awt.Color(255, 255, 255));
        d24.setText("Ingeniería de sistemas");

        javax.swing.GroupLayout InferiorLayout = new javax.swing.GroupLayout(Inferior);
        Inferior.setLayout(InferiorLayout);
        InferiorLayout.setHorizontalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                        .addComponent(d24)
                        .addGap(162, 162, 162)))
                .addGap(218, 218, 218))
        );
        InferiorLayout.setVerticalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        limpiar.setText("Limpiar");
        limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiarMouseClicked(evt);
            }
        });
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        seleccionar.setText("Seleccionar y evaluar");
        seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seleccionarMouseClicked(evt);
            }
        });
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        continuar2.setText("Continuar");
        continuar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continuar2MouseClicked(evt);
            }
        });
        continuar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuar2ActionPerformed(evt);
            }
        });

        d11.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d11.setText("Info (Click en etiquetas):");

        d12.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d12.setText("Confidencialidad ||");
        d12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d12MouseClicked(evt);
            }
        });

        d25.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d25.setText("Integridad ||");
        d25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d25MouseClicked(evt);
            }
        });

        d26.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d26.setText("Disponibilidad");
        d26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d26MouseClicked(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Superior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Inferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(d11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(continuar2)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(d11)
                            .addComponent(d12)
                            .addComponent(d25)
                            .addComponent(d26)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(seleccionar)
                        .addComponent(continuar2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(limpiar)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void d106ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d106ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d106ActionPerformed

    private void d105ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d105ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d105ActionPerformed

    private void d104ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d104ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d104ActionPerformed

    private void d103ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d103ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d103ActionPerformed

    private void d102ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d102ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d102ActionPerformed

    private void d101ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d101ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d101ActionPerformed

    private void d100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d100ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d100ActionPerformed

    private void d99ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d99ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d99ActionPerformed

    private void d98ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d98ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d98ActionPerformed

    private void d97ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d97ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d97ActionPerformed

    private void d96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d96ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d96ActionPerformed

    private void continuar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuar2MouseClicked

        if (e96.isSelected()||e97.isSelected()||e98.isSelected()||e99.isSelected()||e100.isSelected()
                ||e101.isSelected()||e102.isSelected()||e103.isSelected()||e104.isSelected()||e105.isSelected()||e106.isSelected()){
            Principal principal = new Principal();
        
        principal.setVisible(true);
        this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_continuar2MouseClicked

    private void continuar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuar2ActionPerformed
        // TODO add your handling code here:
        //this.dispose();
    }//GEN-LAST:event_continuar2ActionPerformed

    private void limpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarMouseClicked

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed

        seleccionar.setEnabled(true);
        e96.setSelected(false);
        e96.setEnabled(true);
        c96.setEnabled(true);
        d96.setEnabled(true);
        i96.setEnabled(true);

        e97.setSelected(false);
        e97.setEnabled(true);
        c97.setEnabled(true);
        d97.setEnabled(true);
        i97.setEnabled(true);

        e98.setSelected(false);
        e98.setEnabled(true);
        c98.setEnabled(true);
        d98.setEnabled(true);
        i98.setEnabled(true);

        e99.setSelected(false);
        e99.setEnabled(true);
        c99.setEnabled(true);
        d99.setEnabled(true);
        i99.setEnabled(true);

        e100.setSelected(false);
        e100.setEnabled(true);
        c100.setEnabled(true);
        d100.setEnabled(true);
        i100.setEnabled(true);

        e101.setSelected(false);
        e101.setEnabled(true);
        c101.setEnabled(true);
        d101.setEnabled(true);
        i101.setEnabled(true);

        e102.setSelected(false);
        e102.setEnabled(true);
        c102.setEnabled(true);
        d102.setEnabled(true);
        i102.setEnabled(true);

        e103.setSelected(false);
        e103.setEnabled(true);
        c103.setEnabled(true);
        d103.setEnabled(true);
        i103.setEnabled(true);

        e104.setSelected(false);
        e104.setEnabled(true);
        c104.setEnabled(true);
        d104.setEnabled(true);
        i104.setEnabled(true);

        e105.setSelected(false);
        e105.setEnabled(true);
        c105.setEnabled(true);
        d105.setEnabled(true);
        i105.setEnabled(true);

        e106.setSelected(false);
        e106.setEnabled(true);
        c106.setEnabled(true);
        d106.setEnabled(true);
        i106.setEnabled(true);
    }//GEN-LAST:event_limpiarActionPerformed

    private void seleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seleccionarMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarMouseClicked

    public void validarActivos() {

        seleccionar.setEnabled(false);
        if (e96.isSelected()) {
            e96.setEnabled(true);
            c96.setEnabled(true);
            d96.setEnabled(true);
            i96.setEnabled(true);
        } else {
            e96.setEnabled(false);
            c96.setEnabled(false);
            d96.setEnabled(false);
            i96.setEnabled(false);
        }

        if (e97.isSelected()) {
            e97.setEnabled(true);
            c97.setEnabled(true);
            d97.setEnabled(true);
            i97.setEnabled(true);
        } else {
            e97.setEnabled(false);
            c97.setEnabled(false);
            d97.setEnabled(false);
            i97.setEnabled(false);
        }

        if (e98.isSelected()) {
            e98.setEnabled(true);
            c98.setEnabled(true);
            d98.setEnabled(true);
            i98.setEnabled(true);
        } else {
            e98.setEnabled(false);
            c98.setEnabled(false);
            d98.setEnabled(false);
            i98.setEnabled(false);
        }

        if (e99.isSelected()) {
            e99.setEnabled(true);
            c99.setEnabled(true);
            d99.setEnabled(true);
            i99.setEnabled(true);
        } else {
            e99.setEnabled(false);
            c99.setEnabled(false);
            d99.setEnabled(false);
            i99.setEnabled(false);
        }

        if (e100.isSelected()) {
            e100.setEnabled(true);
            c100.setEnabled(true);
            d100.setEnabled(true);
            i100.setEnabled(true);
        } else {
            e100.setEnabled(false);
            c100.setEnabled(false);
            d100.setEnabled(false);
            i100.setEnabled(false);
        }

        if (e100.isSelected()) {
            e100.setEnabled(true);
            c100.setEnabled(true);
            d100.setEnabled(true);
            i100.setEnabled(true);
        } else {
            e100.setEnabled(false);
            c100.setEnabled(false);
            d100.setEnabled(false);
            i100.setEnabled(false);
        }

        if (e100.isSelected()) {
            e100.setEnabled(true);
            c100.setEnabled(true);
            d100.setEnabled(true);
            i100.setEnabled(true);
        } else {
            e100.setEnabled(false);
            c100.setEnabled(false);
            d100.setEnabled(false);
            i100.setEnabled(false);
        }

        if (e100.isSelected()) {
            e100.setEnabled(true);
            c100.setEnabled(true);
            d100.setEnabled(true);
            i100.setEnabled(true);
        } else {
            e100.setEnabled(false);
            c100.setEnabled(false);
            d100.setEnabled(false);
            i100.setEnabled(false);
        }

        if (e100.isSelected()) {
            e100.setEnabled(true);
            c100.setEnabled(true);
            d100.setEnabled(true);
            i100.setEnabled(true);
        } else {
            e100.setEnabled(false);
            c100.setEnabled(false);
            d100.setEnabled(false);
            i100.setEnabled(false);
        }

        if (e100.isSelected()) {
            e100.setEnabled(true);
            c100.setEnabled(true);
            d100.setEnabled(true);
            i100.setEnabled(true);
        } else {
            e100.setEnabled(false);
            c100.setEnabled(false);
            d100.setEnabled(false);
            i100.setEnabled(false);
        }

        if (e101.isSelected()) {
            e101.setEnabled(true);
            c101.setEnabled(true);
            d101.setEnabled(true);
            i101.setEnabled(true);
        } else {
            e101.setEnabled(false);
            c101.setEnabled(false);
            d101.setEnabled(false);
            i101.setEnabled(false);
        }
        
        if (e102.isSelected()) {
            e102.setEnabled(true);
            c102.setEnabled(true);
            d102.setEnabled(true);
            i102.setEnabled(true);
        } else {
            e102.setEnabled(false);
            c102.setEnabled(false);
            d102.setEnabled(false);
            i102.setEnabled(false);
        }
        
        if (e103.isSelected()) {
            e103.setEnabled(true);
            c103.setEnabled(true);
            d103.setEnabled(true);
            i103.setEnabled(true);
        } else {
            e103.setEnabled(false);
            c103.setEnabled(false);
            d103.setEnabled(false);
            i103.setEnabled(false);
        }
        
        if (e104.isSelected()) {
            e104.setEnabled(true);
            c104.setEnabled(true);
            d104.setEnabled(true);
            i104.setEnabled(true);
        } else {
            e104.setEnabled(false);
            c104.setEnabled(false);
            d104.setEnabled(false);
            i104.setEnabled(false);
        }
        
        if (e105.isSelected()) {
            e105.setEnabled(true);
            c105.setEnabled(true);
            d105.setEnabled(true);
            i105.setEnabled(true);
        } else {
            e105.setEnabled(false);
            c105.setEnabled(false);
            d105.setEnabled(false);
            i105.setEnabled(false);
        }
        
        if (e106.isSelected()) {
            e106.setEnabled(true);
            c106.setEnabled(true);
            d106.setEnabled(true);
            i106.setEnabled(true);
        } else {
            e106.setEnabled(false);
            c106.setEnabled(false);
            d106.setEnabled(false);
            i106.setEnabled(false);
        }
        
        if (e96.isSelected() || e97.isSelected() || e98.isSelected() || e99.isSelected()
                || e100.isSelected() || e101.isSelected()
                || e102.isSelected() || e103.isSelected() || e104.isSelected()
                || e105.isSelected() || e106.isSelected()) {
            JOptionPane.showMessageDialog(null, "Por favor, evalue");
        }

    }
    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed

        if (e96.isSelected()||e97.isSelected()||e98.isSelected()||e99.isSelected()||e100.isSelected()
                ||e101.isSelected()||e102.isSelected()||e103.isSelected()||e104.isSelected()||e105.isSelected()||e106.isSelected()){
            validarActivos();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_seleccionarActionPerformed

    private void e101ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e101ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e101ActionPerformed

    private void c96KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c96KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c96.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c96KeyTyped

    private void i96KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i96KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i96.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i96KeyTyped

    private void d96KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d96KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d96.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d96KeyTyped

    private void c97KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c97KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c97.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c97KeyTyped

    private void i97KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i97KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i97.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i97KeyTyped

    private void d97KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d97KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d97.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d97KeyTyped

    private void c98KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c98KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c98.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c98KeyTyped

    private void i98KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i98KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i98.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i98KeyTyped

    private void d98KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d98KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d98.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d98KeyTyped

    private void c99KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c99KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c99.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c99KeyTyped

    private void i99KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i99KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i99.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i99KeyTyped

    private void d99KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d99KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d99.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d99KeyTyped

    private void c100KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c100KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c100.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c100KeyTyped

    private void i100KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i100KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i100.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i100KeyTyped

    private void d100KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d100KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d100.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d100KeyTyped

    private void c101KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c101KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c101.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c101KeyTyped

    private void i101KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i101KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i101.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i101KeyTyped

    private void d101KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d101KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d101.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d101KeyTyped

    private void c102KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c102KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c102.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c102KeyTyped

    private void i102KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i102KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i102.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i102KeyTyped

    private void d102KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d102KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d102.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d102KeyTyped

    private void c103KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c103KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c103.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c103KeyTyped

    private void i103KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i103KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i103.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i103KeyTyped

    private void d103KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d103KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d103.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d103KeyTyped

    private void c104KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c104KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c104.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c104KeyTyped

    private void i104KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i104KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i104.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i104KeyTyped

    private void d104KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d104KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d104.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d104KeyTyped

    private void c105KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c105KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c105.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c105KeyTyped

    private void i105KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i105KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i105.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i105KeyTyped

    private void d105KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d105KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d105.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d105KeyTyped

    private void c106KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c106KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c106.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c106KeyTyped

    private void i106ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i106ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i106ActionPerformed

    private void i106KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i106KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i106.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i106KeyTyped

    private void d106KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d106KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d106.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d106KeyTyped

    private void d12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d12MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "La información no se pone a disposición ni se revela a individuos, entidades o procesos no autorizados.",
            "[Confidencialidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:
    }//GEN-LAST:event_d12MouseClicked

    private void d25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d25MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Mantenimiento de la exactitud y completitud de la información y sus métodos de proceso.",
            "[Integridad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_d25MouseClicked

    private void d26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d26MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Acceso y utilización de la información y los sistemas de tratamiento de la misma"
            +sl+ "por parte de los individuos, entidades o procesos autorizados cuando lo requieran.",
            "[Disponibilidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_d26MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked

        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro qué desea salir?", "¡Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (JOptionPane.YES_OPTION == resp) {
            JOptionPane.showMessageDialog(null, "Hasta pronto...", "Sistema de evaluación", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor continue con la evaluación", "Sistema de evaluación SGSI", JOptionPane.INFORMATION_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    private void e96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e96ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e96ActionPerformed

    private void c96ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c96ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c96ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Equipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Equipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Equipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Equipamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Equipamiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inferior;
    private javax.swing.JPanel Principal;
    private javax.swing.JPanel Superior;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JLabel c;
    private javax.swing.JTextField c100;
    private javax.swing.JTextField c101;
    private javax.swing.JTextField c102;
    private javax.swing.JTextField c103;
    private javax.swing.JTextField c104;
    private javax.swing.JTextField c105;
    private javax.swing.JTextField c106;
    private javax.swing.JTextField c96;
    private javax.swing.JTextField c97;
    private javax.swing.JTextField c98;
    private javax.swing.JTextField c99;
    private javax.swing.JButton continuar2;
    private javax.swing.JLabel d;
    private javax.swing.JTextField d100;
    private javax.swing.JTextField d101;
    private javax.swing.JTextField d102;
    private javax.swing.JTextField d103;
    private javax.swing.JTextField d104;
    private javax.swing.JTextField d105;
    private javax.swing.JTextField d106;
    private javax.swing.JLabel d11;
    private javax.swing.JLabel d12;
    private javax.swing.JLabel d24;
    private javax.swing.JLabel d25;
    private javax.swing.JLabel d26;
    private javax.swing.JLabel d6;
    private javax.swing.JTextField d96;
    private javax.swing.JTextField d97;
    private javax.swing.JTextField d98;
    private javax.swing.JTextField d99;
    private javax.swing.JRadioButton e100;
    private javax.swing.JRadioButton e101;
    private javax.swing.JRadioButton e102;
    private javax.swing.JRadioButton e103;
    private javax.swing.JRadioButton e104;
    private javax.swing.JRadioButton e105;
    private javax.swing.JRadioButton e106;
    private javax.swing.JRadioButton e96;
    private javax.swing.JRadioButton e97;
    private javax.swing.JRadioButton e98;
    private javax.swing.JRadioButton e99;
    private javax.swing.JTextField i100;
    private javax.swing.JTextField i101;
    private javax.swing.JTextField i102;
    private javax.swing.JTextField i103;
    private javax.swing.JTextField i104;
    private javax.swing.JTextField i105;
    private javax.swing.JTextField i106;
    private javax.swing.JTextField i96;
    private javax.swing.JTextField i97;
    private javax.swing.JTextField i98;
    private javax.swing.JTextField i99;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton seleccionar;
    // End of variables declaration//GEN-END:variables
}
