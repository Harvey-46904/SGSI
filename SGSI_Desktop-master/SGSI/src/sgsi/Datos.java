/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgsi;

import javax.swing.JOptionPane;

/**
 *
 * @author Luis Efe
 */
public class Datos extends javax.swing.JFrame {

    /**
     * Creates new form activos_esenciales
     */
    public Datos() {
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Superior = new javax.swing.JPanel();
        a = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        Inferior = new javax.swing.JPanel();
        d6 = new javax.swing.JLabel();
        d24 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Principal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        i13 = new javax.swing.JTextField();
        d13 = new javax.swing.JTextField();
        c13 = new javax.swing.JTextField();
        i14 = new javax.swing.JTextField();
        d14 = new javax.swing.JTextField();
        c14 = new javax.swing.JTextField();
        i15 = new javax.swing.JTextField();
        d15 = new javax.swing.JTextField();
        c15 = new javax.swing.JTextField();
        i16 = new javax.swing.JTextField();
        d16 = new javax.swing.JTextField();
        c16 = new javax.swing.JTextField();
        i17 = new javax.swing.JTextField();
        d17 = new javax.swing.JTextField();
        c17 = new javax.swing.JTextField();
        i18 = new javax.swing.JTextField();
        d18 = new javax.swing.JTextField();
        c18 = new javax.swing.JTextField();
        i19 = new javax.swing.JTextField();
        d19 = new javax.swing.JTextField();
        c19 = new javax.swing.JTextField();
        i20 = new javax.swing.JTextField();
        d20 = new javax.swing.JTextField();
        c20 = new javax.swing.JTextField();
        i21 = new javax.swing.JTextField();
        d21 = new javax.swing.JTextField();
        c21 = new javax.swing.JTextField();
        i22 = new javax.swing.JTextField();
        d22 = new javax.swing.JTextField();
        c22 = new javax.swing.JTextField();
        i23 = new javax.swing.JTextField();
        d23 = new javax.swing.JTextField();
        c23 = new javax.swing.JTextField();
        da14 = new javax.swing.JRadioButton();
        da15 = new javax.swing.JRadioButton();
        da16 = new javax.swing.JRadioButton();
        da17 = new javax.swing.JRadioButton();
        da18 = new javax.swing.JRadioButton();
        da19 = new javax.swing.JRadioButton();
        da20 = new javax.swing.JRadioButton();
        da21 = new javax.swing.JRadioButton();
        da22 = new javax.swing.JRadioButton();
        da13 = new javax.swing.JRadioButton();
        da23 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        continuar = new javax.swing.JButton();
        seleccionar = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        d11 = new javax.swing.JLabel();
        d12 = new javax.swing.JLabel();
        d25 = new javax.swing.JLabel();
        d26 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Datos e información");
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        Superior.setBackground(new java.awt.Color(53, 96, 183));

        a.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        a.setForeground(new java.awt.Color(255, 255, 255));
        a.setText("[Modulo datos e información]");

        c.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));
        c.setText("Para continuar por favor no olvide que como paso inicial debe marcar los activos con los cuales cuente su organización, posteriormente dar click en \"Seleccionar y evaluar\"");

        b.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        b.setForeground(new java.awt.Color(255, 255, 255));
        b.setText("y luego debe asignar valores entre 0 y 9  de acuerdo al conocimiento que tenga sobre los niveles de confidencialidad, integridad y disponibilidad de los mismos .");

        d.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d.setForeground(new java.awt.Color(255, 255, 255));
        d.setText("Nota: Para más información sobre los activos click en los signos de interrogación. Recuerde que (0) es el valor más bajo y (9) es el valor más alto de valoración. ");

        javax.swing.GroupLayout SuperiorLayout = new javax.swing.GroupLayout(Superior);
        Superior.setLayout(SuperiorLayout);
        SuperiorLayout.setHorizontalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SuperiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b)
                    .addComponent(c)
                    .addComponent(d))
                .addContainerGap())
        );
        SuperiorLayout.setVerticalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(c)
                .addGap(2, 2, 2)
                .addComponent(b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d)
                .addContainerGap())
        );

        Inferior.setBackground(new java.awt.Color(173, 15, 55));

        d6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 255, 255));
        d6.setText("Desarrollado por: Luis Fernando Díaz Muñoz - Juan Sebastián Erazo Chamorro");

        d24.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d24.setForeground(new java.awt.Color(255, 255, 255));
        d24.setText("Ingeniería de sistemas");

        javax.swing.GroupLayout InferiorLayout = new javax.swing.GroupLayout(Inferior);
        Inferior.setLayout(InferiorLayout);
        InferiorLayout.setHorizontalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                        .addComponent(d24)
                        .addGap(162, 162, 162)))
                .addGap(218, 218, 218))
        );
        InferiorLayout.setVerticalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Nombre activo");

        jLabel5.setText("Confianza");

        jLabel6.setText("Integridad");

        jLabel7.setText("Disponibilidad");

        i13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i13KeyTyped(evt);
            }
        });

        d13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d13ActionPerformed(evt);
            }
        });
        d13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d13KeyTyped(evt);
            }
        });

        c13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c13KeyTyped(evt);
            }
        });

        i14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i14KeyTyped(evt);
            }
        });

        d14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d14ActionPerformed(evt);
            }
        });
        d14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d14KeyTyped(evt);
            }
        });

        c14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c14KeyTyped(evt);
            }
        });

        i15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i15KeyTyped(evt);
            }
        });

        d15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d15ActionPerformed(evt);
            }
        });
        d15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d15KeyTyped(evt);
            }
        });

        c15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c15KeyTyped(evt);
            }
        });

        i16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i16KeyTyped(evt);
            }
        });

        d16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d16ActionPerformed(evt);
            }
        });
        d16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d16KeyTyped(evt);
            }
        });

        c16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c16KeyTyped(evt);
            }
        });

        i17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i17KeyTyped(evt);
            }
        });

        d17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d17ActionPerformed(evt);
            }
        });
        d17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d17KeyTyped(evt);
            }
        });

        c17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c17KeyTyped(evt);
            }
        });

        i18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i18KeyTyped(evt);
            }
        });

        d18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d18ActionPerformed(evt);
            }
        });
        d18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d18KeyTyped(evt);
            }
        });

        c18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c18KeyTyped(evt);
            }
        });

        i19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i19KeyTyped(evt);
            }
        });

        d19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d19ActionPerformed(evt);
            }
        });
        d19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d19KeyTyped(evt);
            }
        });

        c19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c19KeyTyped(evt);
            }
        });

        i20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i20KeyTyped(evt);
            }
        });

        d20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d20ActionPerformed(evt);
            }
        });
        d20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d20KeyTyped(evt);
            }
        });

        c20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c20KeyTyped(evt);
            }
        });

        i21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i21KeyTyped(evt);
            }
        });

        d21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d21ActionPerformed(evt);
            }
        });
        d21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d21KeyTyped(evt);
            }
        });

        c21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c21KeyTyped(evt);
            }
        });

        i22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i22KeyTyped(evt);
            }
        });

        d22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d22ActionPerformed(evt);
            }
        });
        d22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d22KeyTyped(evt);
            }
        });

        c22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c22KeyTyped(evt);
            }
        });

        i23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i23KeyTyped(evt);
            }
        });

        d23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d23ActionPerformed(evt);
            }
        });
        d23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d23KeyTyped(evt);
            }
        });

        c23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c23KeyTyped(evt);
            }
        });

        da14.setText("[backup] Copias de respaldo");
        da14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                da14ActionPerformed(evt);
            }
        });

        da15.setText("[conf]  Datos de configuración");

        da16.setText("[int] Datos de gestión interna");

        da17.setText("[password] Credenciales/Contraseñas");

        da18.setText("[auth] Datos de validación de credenciales");

        da19.setText("[acl] Datos de control de acceso");

        da20.setText("[log] Registro de actividad");

        da21.setText("[source]Código fuente");

        da22.setText("[exe] Código ejecutable");

        da13.setText("[files] Ficheros");

        da23.setText("[test] Datos de prueba");

        jLabel1.setText("¿?");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
        });

        jLabel2.setText("¿?");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
        });

        jLabel3.setText("¿?");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(da14)
                            .addComponent(da19)
                            .addComponent(da21)
                            .addComponent(da22)
                            .addComponent(da23)
                            .addComponent(da16)
                            .addComponent(da17)
                            .addComponent(da18))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(da13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(da20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(da15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)))
                        .addGap(29, 29, 29)))
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(i14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)))
                .addGap(238, 238, 238))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PrincipalLayout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addComponent(i14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(i21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(i22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(i23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PrincipalLayout.createSequentialGroup()
                            .addComponent(d13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(d14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(d21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(d22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(d23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                            .addComponent(da14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da16)
                            .addGap(6, 6, 6)
                            .addComponent(da17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da19)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(da20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(da23)
                            .addGap(4, 4, 4)))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(da13)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(c14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(6, 6, 6)
                        .addComponent(c16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(c17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(c18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(c19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(c20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(6, 6, 6)
                        .addComponent(c21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(c22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jScrollPane1.setViewportView(Principal);

        continuar.setText("Continuar");
        continuar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continuarMouseClicked(evt);
            }
        });
        continuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuarActionPerformed(evt);
            }
        });

        seleccionar.setText("Seleccionar y evaluar");
        seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seleccionarMouseClicked(evt);
            }
        });
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        limpiar.setText("Limpiar");
        limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiarMouseClicked(evt);
            }
        });
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        d11.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d11.setText("Info (Click en etiquetas):");

        d12.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d12.setText("Confidencialidad ||");
        d12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d12MouseClicked(evt);
            }
        });

        d25.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d25.setText("Integridad ||");
        d25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d25MouseClicked(evt);
            }
        });

        d26.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d26.setText("Disponibilidad");
        d26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d26MouseClicked(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Superior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Inferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(limpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(seleccionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(continuar)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d11)
                        .addComponent(d12)
                        .addComponent(d25)
                        .addComponent(d26))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(continuar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(seleccionar)
                        .addComponent(limpiar)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed

        if (da14.isSelected() || da15.isSelected() || da16.isSelected() || da18.isSelected()){
            validarActivos();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_seleccionarActionPerformed

    private void seleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seleccionarMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarMouseClicked

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed

        
        seleccionar.setEnabled(true);
        da13.setSelected(false);
        da13.setEnabled(true);
        c13.setEnabled(true);
        d13.setEnabled(true);
        i13.setEnabled(true);

        da14.setSelected(false);
        da14.setEnabled(true);
        c14.setEnabled(true);
        d14.setEnabled(true);
        i14.setEnabled(true);

        da15.setSelected(false);
        da15.setEnabled(true);
        c15.setEnabled(true);
        d15.setEnabled(true);
        i15.setEnabled(true);

        da16.setSelected(false);
        da16.setEnabled(true);
        c16.setEnabled(true);
        d16.setEnabled(true);
        i16.setEnabled(true);

        da17.setSelected(false);
        da17.setEnabled(true);
        c17.setEnabled(true);
        d17.setEnabled(true);
        i17.setEnabled(true);

        da18.setSelected(false);
        da18.setEnabled(true);
        c18.setEnabled(true);
        d18.setEnabled(true);
        i18.setEnabled(true);

        da19.setSelected(false);
        da19.setEnabled(true);
        c19.setEnabled(true);
        d19.setEnabled(true);
        i19.setEnabled(true);

        da20.setSelected(false);
        da20.setEnabled(true);
        c20.setEnabled(true);
        d20.setEnabled(true);
        i20.setEnabled(true);

        da21.setSelected(false);
        da21.setEnabled(true);
        c21.setEnabled(true);
        d21.setEnabled(true);
        i21.setEnabled(true);

        da22.setSelected(false);
        da22.setEnabled(true);
        c22.setEnabled(true);
        d22.setEnabled(true);
        i22.setEnabled(true);

        da23.setSelected(false);
        da23.setEnabled(true);
        c23.setEnabled(true);
        d23.setEnabled(true);
        i23.setEnabled(true);
    }//GEN-LAST:event_limpiarActionPerformed

    private void limpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarMouseClicked

    private void continuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_continuarActionPerformed

    private void continuarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuarMouseClicked

        if (da14.isSelected() || da15.isSelected() || da16.isSelected() || da18.isSelected()
                || da19.isSelected() || da20.isSelected() || da21.isSelected() || da22.isSelected() || da23.isSelected()){
            Principal principal = new Principal ();
        principal.setVisible(true);
        this.dispose();
        }else{
            JOptionPane.showMessageDialog(rootPane,"Por favor seleccione al menos un activo para continuar"
                    ,"¡Advertencia!",JOptionPane.WARNING_MESSAGE);
        }
            
    }//GEN-LAST:event_continuarMouseClicked

    private void da14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_da14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_da14ActionPerformed

    private void d23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d23ActionPerformed

    private void d22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d22ActionPerformed

    private void d21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d21ActionPerformed

    private void d20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d20ActionPerformed

    private void d19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d19ActionPerformed

    private void d18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d18ActionPerformed

    private void d17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d17ActionPerformed

    private void d16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d16ActionPerformed

    private void d15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d15ActionPerformed

    private void d14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d14ActionPerformed

    private void d13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d13ActionPerformed

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        // TODO add your handling code here:
        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Los datos de configuración son críticos para mantener la funcionalidad de las partes y del conjunto del sistema de información.","[conf]  Datos de configuración",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
        // TODO add your handling code here:
        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane,"Los registros de actividad sustancian los requisitos de trazabilidad.","[log] Registro de actividad",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabel2MouseEntered

    private void c13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c13KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c13.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c13KeyTyped

    private void i13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i13KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i13.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i13KeyTyped

    private void d13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d13KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d13.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d13KeyTyped

    private void c14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c14KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c14.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c14KeyTyped

    private void i14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i14KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i14.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i14KeyTyped

    private void d14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d14KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d14.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d14KeyTyped

    private void c15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c15KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c15.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c15KeyTyped

    private void i15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i15KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i15.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i15KeyTyped

    private void d15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d15KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d15.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d15KeyTyped

    private void c16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c16KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c16.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c16KeyTyped

    private void i16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i16KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i16.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i16KeyTyped

    private void d16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d16KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d16.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d16KeyTyped

    private void c17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c17KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c17.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c17KeyTyped

    private void i17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i17KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i17.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i17KeyTyped

    private void d17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d17KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d17.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d17KeyTyped

    private void c18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c18KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c18.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c18KeyTyped

    private void i18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i18KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i18.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i18KeyTyped

    private void d18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d18KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d18.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d18KeyTyped

    private void c19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c19KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c19.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c19KeyTyped

    private void i19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i19KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i19.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i19KeyTyped

    private void d19KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d19KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d19.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d19KeyTyped

    private void c20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c20KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c20.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c20KeyTyped

    private void i20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i20KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i20.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i20KeyTyped

    private void d20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d20KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d20.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d20KeyTyped

    private void c21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c21KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c21.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c21KeyTyped

    private void i21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i21KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i21.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i21KeyTyped

    private void d21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d21KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d21.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d21KeyTyped

    private void c22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c22KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c22.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c22KeyTyped

    private void i22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i22KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i22.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i22KeyTyped

    private void d22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d22KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d22.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d22KeyTyped

    private void c23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c23KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c23.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c23KeyTyped

    private void i23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i23KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i23.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i23KeyTyped

    private void d23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d23KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d23.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d23KeyTyped

    private void d12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d12MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "La información no se pone a disposición ni se revela a individuos, entidades o procesos no autorizados.",
            "[Confidencialidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:
    }//GEN-LAST:event_d12MouseClicked

    private void d25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d25MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Mantenimiento de la exactitud y completitud de la información y sus métodos de proceso.",
            "[Integridad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_d25MouseClicked

    private void d26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d26MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Acceso y utilización de la información y los sistemas de tratamiento de la misma"
            +sl+ "por parte de los individuos, entidades o procesos autorizados cuando lo requieran.",
            "[Disponibilidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_d26MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Denominado también como archivo, consiste en una unidad de información en "
                +sl+ "la que se almacena el resultado de utilizar un programa de proceso de textos, "
                + sl+"base de datos o cualquier otro tipo de aplicación"
            ,"[Files] Ficheros", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
        
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked

        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro qué desea salir?", "¡Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (JOptionPane.YES_OPTION == resp) {
            JOptionPane.showMessageDialog(null, "Hasta pronto...", "Sistema de evaluación", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor continue con la evaluación", "Sistema de evaluación SGSI", JOptionPane.INFORMATION_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    public void validarActivos(){
        seleccionar.setEnabled(false);
    if (da13.isSelected()){
            da13.setEnabled(true);
            c13.setEnabled(true);
            d13.setEnabled(true);
            i13.setEnabled(true);
    }else{
        da13.setEnabled(false);
            c13.setEnabled(false);
            d13.setEnabled(false);
            i13.setEnabled(false);
    }
    
    if (da14.isSelected()){
            da14.setEnabled(true);
            c14.setEnabled(true);
            d14.setEnabled(true);
            i14.setEnabled(true);
    }else{
        da14.setEnabled(false);
            c14.setEnabled(false);
            d14.setEnabled(false);
            i14.setEnabled(false);
    }
    if (da15.isSelected()){
            da15.setEnabled(true);
            c15.setEnabled(true);
            d15.setEnabled(true);
            i15.setEnabled(true);
    }else{
        da15.setEnabled(false);
            c15.setEnabled(false);
            d15.setEnabled(false);
            i15.setEnabled(false);
    }
    if (da16.isSelected()){
            da16.setEnabled(true);
            c16.setEnabled(true);
            d16.setEnabled(true);
            i16.setEnabled(true);
    }else{
        da16.setEnabled(false);
            c16.setEnabled(false);
            d16.setEnabled(false);
            i16.setEnabled(false);
    }
    if (da17.isSelected()){
            da17.setEnabled(true);
            c17.setEnabled(true);
            d17.setEnabled(true);
            i17.setEnabled(true);
    }else{
        da17.setEnabled(false);
            c17.setEnabled(false);
            d17.setEnabled(false);
            i17.setEnabled(false);
    }
    if (da18.isSelected()){
            da18.setEnabled(true);
            c18.setEnabled(true);
            d18.setEnabled(true);
            i18.setEnabled(true);
    }
    else{
        da18.setEnabled(false);
            c18.setEnabled(false);
            d18.setEnabled(false);
            i18.setEnabled(false);
    }
    if (da19.isSelected()){
            da19.setEnabled(true);
            c19.setEnabled(true);
            d19.setEnabled(true);
            i19.setEnabled(true);
    }else{
        da19.setEnabled(false);
            c19.setEnabled(false);
            d19.setEnabled(false);
            i19.setEnabled(false);
    }
    if (da20.isSelected()){
            da20.setEnabled(true);
            c20.setEnabled(true);
            d20.setEnabled(true);
            i20.setEnabled(true);
    }
    else{
        da20.setEnabled(false);
            c20.setEnabled(false);
            d20.setEnabled(false);
            i20.setEnabled(false);
    }
    if (da21.isSelected()){
            da21.setEnabled(true);
            c21.setEnabled(true);
            d21.setEnabled(true);
            i21.setEnabled(true);
    }else{
        da21.setEnabled(false);
            c21.setEnabled(false);
            d21.setEnabled(false);
            i21.setEnabled(false);
    }
    if (da22.isSelected()){
            da22.setEnabled(true);
            c22.setEnabled(true);
            d22.setEnabled(true);
            i22.setEnabled(true);
    }else{
        da22.setEnabled(false);
            c22.setEnabled(false);
            d22.setEnabled(false);
            i22.setEnabled(false);
    }
    if (da23.isSelected()){
            da23.setEnabled(true);
            c23.setEnabled(true);
            d23.setEnabled(true);
            i23.setEnabled(true);
    }
    else{
        da23.setEnabled(false);
            c23.setEnabled(false);
            d23.setEnabled(false);
            i23.setEnabled(false);
    }if (da13.isSelected() || da14.isSelected() ||da15.isSelected() ||da16.isSelected() ||da17.isSelected() ||da18.isSelected() ||da19.isSelected() ||da20.isSelected() ||da21.isSelected() ||da22.isSelected() ||da23.isSelected()) {
            JOptionPane.showMessageDialog(null, "Por favor, evalue");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Datos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Datos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inferior;
    private javax.swing.JPanel Principal;
    private javax.swing.JPanel Superior;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JLabel c;
    private javax.swing.JTextField c13;
    private javax.swing.JTextField c14;
    private javax.swing.JTextField c15;
    private javax.swing.JTextField c16;
    private javax.swing.JTextField c17;
    private javax.swing.JTextField c18;
    private javax.swing.JTextField c19;
    private javax.swing.JTextField c20;
    private javax.swing.JTextField c21;
    private javax.swing.JTextField c22;
    private javax.swing.JTextField c23;
    private javax.swing.JButton continuar;
    private javax.swing.JLabel d;
    private javax.swing.JLabel d11;
    private javax.swing.JLabel d12;
    private javax.swing.JTextField d13;
    private javax.swing.JTextField d14;
    private javax.swing.JTextField d15;
    private javax.swing.JTextField d16;
    private javax.swing.JTextField d17;
    private javax.swing.JTextField d18;
    private javax.swing.JTextField d19;
    private javax.swing.JTextField d20;
    private javax.swing.JTextField d21;
    private javax.swing.JTextField d22;
    private javax.swing.JTextField d23;
    private javax.swing.JLabel d24;
    private javax.swing.JLabel d25;
    private javax.swing.JLabel d26;
    private javax.swing.JLabel d6;
    private javax.swing.JRadioButton da13;
    private javax.swing.JRadioButton da14;
    private javax.swing.JRadioButton da15;
    private javax.swing.JRadioButton da16;
    private javax.swing.JRadioButton da17;
    private javax.swing.JRadioButton da18;
    private javax.swing.JRadioButton da19;
    private javax.swing.JRadioButton da20;
    private javax.swing.JRadioButton da21;
    private javax.swing.JRadioButton da22;
    private javax.swing.JRadioButton da23;
    private javax.swing.JTextField i13;
    private javax.swing.JTextField i14;
    private javax.swing.JTextField i15;
    private javax.swing.JTextField i16;
    private javax.swing.JTextField i17;
    private javax.swing.JTextField i18;
    private javax.swing.JTextField i19;
    private javax.swing.JTextField i20;
    private javax.swing.JTextField i21;
    private javax.swing.JTextField i22;
    private javax.swing.JTextField i23;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton seleccionar;
    // End of variables declaration//GEN-END:variables
}
