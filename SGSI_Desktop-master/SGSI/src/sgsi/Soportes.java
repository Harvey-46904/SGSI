/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgsi;

import javax.swing.JOptionPane;

/**
 *
 * @author Luis Efe
 */
public class Soportes extends javax.swing.JFrame {

    /**
     * Creates new form activos_esenciales
     */
    public Soportes() {
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Principal = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        i82 = new javax.swing.JTextField();
        d82 = new javax.swing.JTextField();
        c82 = new javax.swing.JTextField();
        c83 = new javax.swing.JTextField();
        d83 = new javax.swing.JTextField();
        i83 = new javax.swing.JTextField();
        c84 = new javax.swing.JTextField();
        d84 = new javax.swing.JTextField();
        i84 = new javax.swing.JTextField();
        c85 = new javax.swing.JTextField();
        d85 = new javax.swing.JTextField();
        i85 = new javax.swing.JTextField();
        c86 = new javax.swing.JTextField();
        d86 = new javax.swing.JTextField();
        i86 = new javax.swing.JTextField();
        c87 = new javax.swing.JTextField();
        d87 = new javax.swing.JTextField();
        i87 = new javax.swing.JTextField();
        c88 = new javax.swing.JTextField();
        d88 = new javax.swing.JTextField();
        i88 = new javax.swing.JTextField();
        c89 = new javax.swing.JTextField();
        d89 = new javax.swing.JTextField();
        i89 = new javax.swing.JTextField();
        c90 = new javax.swing.JTextField();
        d90 = new javax.swing.JTextField();
        i90 = new javax.swing.JTextField();
        c91 = new javax.swing.JTextField();
        d91 = new javax.swing.JTextField();
        i91 = new javax.swing.JTextField();
        i92 = new javax.swing.JTextField();
        d92 = new javax.swing.JTextField();
        c92 = new javax.swing.JTextField();
        i93 = new javax.swing.JTextField();
        d93 = new javax.swing.JTextField();
        c93 = new javax.swing.JTextField();
        i94 = new javax.swing.JTextField();
        d94 = new javax.swing.JTextField();
        c94 = new javax.swing.JTextField();
        i95 = new javax.swing.JTextField();
        d95 = new javax.swing.JTextField();
        c95 = new javax.swing.JTextField();
        so82 = new javax.swing.JRadioButton();
        so83 = new javax.swing.JRadioButton();
        so84 = new javax.swing.JRadioButton();
        so85 = new javax.swing.JRadioButton();
        so86 = new javax.swing.JRadioButton();
        so87 = new javax.swing.JRadioButton();
        so88 = new javax.swing.JRadioButton();
        so89 = new javax.swing.JRadioButton();
        so90 = new javax.swing.JRadioButton();
        so91 = new javax.swing.JRadioButton();
        so92 = new javax.swing.JRadioButton();
        so93 = new javax.swing.JRadioButton();
        so94 = new javax.swing.JRadioButton();
        so95 = new javax.swing.JRadioButton();
        Superior = new javax.swing.JPanel();
        a = new javax.swing.JLabel();
        c = new javax.swing.JLabel();
        b = new javax.swing.JLabel();
        d = new javax.swing.JLabel();
        Inferior = new javax.swing.JPanel();
        d6 = new javax.swing.JLabel();
        d54 = new javax.swing.JLabel();
        limpiar = new javax.swing.JButton();
        seleccionar = new javax.swing.JButton();
        continuar2 = new javax.swing.JButton();
        d11 = new javax.swing.JLabel();
        d12 = new javax.swing.JLabel();
        d55 = new javax.swing.JLabel();
        d56 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Soportes");
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jLabel4.setText("Nombre");

        jLabel5.setText("Confianza");

        jLabel6.setText("Integridad");

        jLabel7.setText("Disponibilidad");

        i82.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i82KeyTyped(evt);
            }
        });

        d82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d82ActionPerformed(evt);
            }
        });
        d82.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d82KeyTyped(evt);
            }
        });

        c82.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c82KeyTyped(evt);
            }
        });

        c83.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c83KeyTyped(evt);
            }
        });

        d83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d83ActionPerformed(evt);
            }
        });
        d83.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d83KeyTyped(evt);
            }
        });

        i83.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i83KeyTyped(evt);
            }
        });

        c84.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c84KeyTyped(evt);
            }
        });

        d84.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d84ActionPerformed(evt);
            }
        });
        d84.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d84KeyTyped(evt);
            }
        });

        i84.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i84KeyTyped(evt);
            }
        });

        c85.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c85KeyTyped(evt);
            }
        });

        d85.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d85ActionPerformed(evt);
            }
        });
        d85.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d85KeyTyped(evt);
            }
        });

        i85.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i85KeyTyped(evt);
            }
        });

        c86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c86KeyTyped(evt);
            }
        });

        d86.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d86ActionPerformed(evt);
            }
        });
        d86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d86KeyTyped(evt);
            }
        });

        i86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i86KeyTyped(evt);
            }
        });

        c87.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c87KeyTyped(evt);
            }
        });

        d87.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d87ActionPerformed(evt);
            }
        });
        d87.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d87KeyTyped(evt);
            }
        });

        i87.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i87KeyTyped(evt);
            }
        });

        c88.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c88KeyTyped(evt);
            }
        });

        d88.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d88ActionPerformed(evt);
            }
        });
        d88.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d88KeyTyped(evt);
            }
        });

        i88.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i88KeyTyped(evt);
            }
        });

        c89.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c89KeyTyped(evt);
            }
        });

        d89.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d89ActionPerformed(evt);
            }
        });
        d89.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d89KeyTyped(evt);
            }
        });

        i89.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i89KeyTyped(evt);
            }
        });

        c90.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c90KeyTyped(evt);
            }
        });

        d90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d90ActionPerformed(evt);
            }
        });
        d90.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d90KeyTyped(evt);
            }
        });

        i90.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i90KeyTyped(evt);
            }
        });

        c91.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c91KeyTyped(evt);
            }
        });

        d91.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d91ActionPerformed(evt);
            }
        });
        d91.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d91KeyTyped(evt);
            }
        });

        i91.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i91KeyTyped(evt);
            }
        });

        i92.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i92KeyTyped(evt);
            }
        });

        d92.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d92ActionPerformed(evt);
            }
        });
        d92.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d92KeyTyped(evt);
            }
        });

        c92.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c92KeyTyped(evt);
            }
        });

        i93.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i93KeyTyped(evt);
            }
        });

        d93.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d93ActionPerformed(evt);
            }
        });
        d93.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d93KeyTyped(evt);
            }
        });

        c93.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c93KeyTyped(evt);
            }
        });

        i94.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i94KeyTyped(evt);
            }
        });

        d94.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d94ActionPerformed(evt);
            }
        });
        d94.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d94KeyTyped(evt);
            }
        });

        c94.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c94KeyTyped(evt);
            }
        });

        i95.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                i95KeyTyped(evt);
            }
        });

        d95.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d95ActionPerformed(evt);
            }
        });
        d95.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                d95KeyTyped(evt);
            }
        });

        c95.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                c95KeyTyped(evt);
            }
        });

        so82.setText("[electronic] Electrónicos");

        so83.setText("[disk] Discos");
        so83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                so83ActionPerformed(evt);
            }
        });

        so84.setText("[san] Almacenamiento en red");

        so85.setText("[disquette] Disquetes");

        so86.setText("[cd] Cederrón (CD-ROM)");

        so87.setText("[usb] Memorias USB");
        so87.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                so87ActionPerformed(evt);
            }
        });

        so88.setText("[dvd] DVD");

        so89.setText("[tape] Cinta magnética");

        so90.setText("[mc] Tarjetas de memoria");

        so91.setText("[ic] Tarjetas inteligentes");

        so92.setText("[printed] Material impreso");

        so93.setText("[tape] Cinta de papel");

        so94.setText("[film] Microfilm");

        so95.setText("[cards] Tarjetas perforadas");

        javax.swing.GroupLayout PrincipalLayout = new javax.swing.GroupLayout(Principal);
        Principal.setLayout(PrincipalLayout);
        PrincipalLayout.setHorizontalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addContainerGap(278, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(so89)
                                    .addComponent(so90)
                                    .addComponent(so88)
                                    .addComponent(so87)
                                    .addComponent(so86)
                                    .addComponent(so91)
                                    .addComponent(so85)
                                    .addComponent(so84)
                                    .addComponent(so83)
                                    .addComponent(so82))
                                .addGap(73, 73, 73))
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(so92)
                                    .addComponent(so93)
                                    .addComponent(so94)
                                    .addComponent(so95))
                                .addGap(81, 81, 81)))
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c82, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i82, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d82, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c83, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i83, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d83, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c84, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i84, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d84, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c85, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i85, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d85, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c86, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i86, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d86, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c87, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i87, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d87, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c88, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i88, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d88, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c89, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i89, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d89, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c90, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i90, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d90, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c91, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i91, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d91, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PrincipalLayout.createSequentialGroup()
                                        .addComponent(c92, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(i92, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(d92, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                                        .addComponent(c93, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)
                                        .addComponent(i93, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(d93, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c94, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i94, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d94, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PrincipalLayout.createSequentialGroup()
                                    .addComponent(c95, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41)
                                    .addComponent(i95, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(49, 49, 49)
                                    .addComponent(d95, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(229, 229, 229))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PrincipalLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(176, 176, 176)
                                .addComponent(jLabel5)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)))
                        .addGap(233, 233, 233))))
        );
        PrincipalLayout.setVerticalGroup(
            PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so82))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so83))
                .addGap(3, 3, 3)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so84))
                .addGap(3, 3, 3)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so85))
                .addGap(4, 4, 4)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i89, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d89, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c89, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i90, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d90, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c90, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PrincipalLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(so86)
                        .addGap(3, 3, 3)
                        .addComponent(so87)
                        .addGap(3, 3, 3)
                        .addComponent(so88)
                        .addGap(3, 3, 3)
                        .addComponent(so89)
                        .addGap(3, 3, 3)
                        .addComponent(so90)
                        .addGap(3, 3, 3)
                        .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c91, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(so91))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c92, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so92))
                .addGap(2, 2, 2)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i93, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d93, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c93, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so93))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i94, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d94, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c94, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so94))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i95, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d95, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c95, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(so95)))
        );

        jScrollPane1.setViewportView(Principal);

        Superior.setBackground(new java.awt.Color(53, 96, 183));

        a.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        a.setForeground(new java.awt.Color(255, 255, 255));
        a.setText("Módulo [Soportes de información]");

        c.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));
        c.setText("Para continuar por favor no olvide que como paso inicial debe marcar los activos con los cuales cuente su organización, posteriormente dar click en \"Seleccionar y evaluar\"");

        b.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        b.setForeground(new java.awt.Color(255, 255, 255));
        b.setText("y luego debe asignar valores entre 0 y 9  de acuerdo al conocimiento que tenga sobre los niveles de confidencialidad, integridad y disponibilidad de los mismos .");

        d.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d.setForeground(new java.awt.Color(255, 255, 255));
        d.setText("Nota: Para más información sobre los activos click en los signos de interrogación. Recuerde que (0) es el valor más bajo y (9) es el valor más alto de valoración. ");

        javax.swing.GroupLayout SuperiorLayout = new javax.swing.GroupLayout(Superior);
        Superior.setLayout(SuperiorLayout);
        SuperiorLayout.setHorizontalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(a)
                    .addComponent(b)
                    .addComponent(c)
                    .addComponent(d))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SuperiorLayout.setVerticalGroup(
            SuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(a)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c)
                .addGap(2, 2, 2)
                .addComponent(b)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Inferior.setBackground(new java.awt.Color(173, 15, 55));

        d6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 255, 255));
        d6.setText("Desarrollado por: Luis Fernando Díaz Muñoz - Juan Sebastián Erazo Chamorro");

        d54.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        d54.setForeground(new java.awt.Color(255, 255, 255));
        d54.setText("Ingeniería de sistemas");

        javax.swing.GroupLayout InferiorLayout = new javax.swing.GroupLayout(Inferior);
        Inferior.setLayout(InferiorLayout);
        InferiorLayout.setHorizontalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(d6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InferiorLayout.createSequentialGroup()
                        .addComponent(d54)
                        .addGap(162, 162, 162)))
                .addGap(218, 218, 218))
        );
        InferiorLayout.setVerticalGroup(
            InferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(d6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(d54)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        limpiar.setText("Limpiar");
        limpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiarMouseClicked(evt);
            }
        });
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        seleccionar.setText("Seleccionar y evaluar");
        seleccionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                seleccionarMouseClicked(evt);
            }
        });
        seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarActionPerformed(evt);
            }
        });

        continuar2.setText("Continuar");
        continuar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                continuar2MouseClicked(evt);
            }
        });
        continuar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuar2ActionPerformed(evt);
            }
        });

        d11.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d11.setText("Info (Click en etiquetas):");

        d12.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d12.setText("Confidencialidad ||");
        d12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d12MouseClicked(evt);
            }
        });

        d55.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d55.setText("Integridad ||");
        d55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d55MouseClicked(evt);
            }
        });

        d56.setFont(new java.awt.Font("Arial", 3, 10)); // NOI18N
        d56.setText("Disponibilidad");
        d56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d56MouseClicked(evt);
            }
        });

        jButton5.setText("Salir");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Superior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Inferior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(d11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d56)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(limpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seleccionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(continuar2)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Superior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(d11)
                        .addComponent(d12)
                        .addComponent(d55)
                        .addComponent(d56))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(continuar2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(seleccionar)
                        .addComponent(limpiar)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void d82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d82ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d82ActionPerformed

    private void d83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d83ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d83ActionPerformed

    private void d84ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d84ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d84ActionPerformed

    private void d85ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d85ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d85ActionPerformed

    private void d86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d86ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d86ActionPerformed

    private void d87ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d87ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d87ActionPerformed

    private void d88ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d88ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d88ActionPerformed

    private void d89ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d89ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d89ActionPerformed

    private void d90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d90ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d90ActionPerformed

    private void d91ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d91ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d91ActionPerformed

    private void d92ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d92ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d92ActionPerformed

    private void d93ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d93ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d93ActionPerformed

    private void d94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d94ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d94ActionPerformed

    private void d95ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d95ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d95ActionPerformed

    private void limpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_limpiarMouseClicked

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed

        seleccionar.setEnabled(true);
        so82.setSelected(false);
        so82.setEnabled(true);
        c82.setEnabled(true);
        d82.setEnabled(true);
        i82.setEnabled(true);

        so83.setSelected(false);
        so83.setEnabled(true);
        c83.setEnabled(true);
        d83.setEnabled(true);
        i83.setEnabled(true);

        so84.setSelected(false);
        so84.setEnabled(true);
        c84.setEnabled(true);
        d84.setEnabled(true);
        i84.setEnabled(true);

        so85.setSelected(false);
        so85.setEnabled(true);
        c85.setEnabled(true);
        d85.setEnabled(true);
        i85.setEnabled(true);

        so86.setSelected(false);
        so86.setEnabled(true);
        c86.setEnabled(true);
        d86.setEnabled(true);
        i86.setEnabled(true);

        so87.setSelected(false);
        so87.setEnabled(true);
        c87.setEnabled(true);
        d87.setEnabled(true);
        i87.setEnabled(true);

        so88.setSelected(false);
        so88.setEnabled(true);
        c88.setEnabled(true);
        d88.setEnabled(true);
        i88.setEnabled(true);

        so89.setSelected(false);
        so89.setEnabled(true);
        c89.setEnabled(true);
        d89.setEnabled(true);
        i89.setEnabled(true);

        so90.setSelected(false);
        so90.setEnabled(true);
        c90.setEnabled(true);
        d90.setEnabled(true);
        i90.setEnabled(true);

        so91.setSelected(false);
        so91.setEnabled(true);
        c91.setEnabled(true);
        d91.setEnabled(true);
        i91.setEnabled(true);

        so92.setSelected(false);
        so92.setEnabled(true);
        c92.setEnabled(true);
        d92.setEnabled(true);
        i92.setEnabled(true);

        so93.setSelected(false);
        so93.setEnabled(true);
        c93.setEnabled(true);
        d93.setEnabled(true);
        i93.setEnabled(true);

        so94.setSelected(false);
        so94.setEnabled(true);
        c94.setEnabled(true);
        d94.setEnabled(true);
        i94.setEnabled(true);

        so95.setSelected(false);
        so95.setEnabled(true);
        c95.setEnabled(true);
        d95.setEnabled(true);
        i95.setEnabled(true);

    }//GEN-LAST:event_limpiarActionPerformed

    private void seleccionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_seleccionarMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_seleccionarMouseClicked

    public void validarActivos() {

        seleccionar.setEnabled(false);
        if (so82.isSelected()) {
            so82.setEnabled(true);
            c82.setEnabled(true);
            d82.setEnabled(true);
            i82.setEnabled(true);
        } else {
            so82.setEnabled(false);
            c82.setEnabled(false);
            d82.setEnabled(false);
            i82.setEnabled(false);
        }
        if (so82.isSelected()) {
            so82.setEnabled(true);
            c82.setEnabled(true);
            d82.setEnabled(true);
            i82.setEnabled(true);
        } else {
            so82.setEnabled(false);
            c82.setEnabled(false);
            d82.setEnabled(false);
            i82.setEnabled(false);
        }
        if (so83.isSelected()) {
            so83.setEnabled(true);
            c83.setEnabled(true);
            d83.setEnabled(true);
            i83.setEnabled(true);
        } else {
            so83.setEnabled(false);
            c83.setEnabled(false);
            d83.setEnabled(false);
            i83.setEnabled(false);
        }
        if (so84.isSelected()) {
            so84.setEnabled(true);
            c84.setEnabled(true);
            d84.setEnabled(true);
            i84.setEnabled(true);
        } else {
            so84.setEnabled(false);
            c84.setEnabled(false);
            d84.setEnabled(false);
            i84.setEnabled(false);
        }
        if (so85.isSelected()) {
            so85.setEnabled(true);
            c85.setEnabled(true);
            d85.setEnabled(true);
            i85.setEnabled(true);
        } else {
            so85.setEnabled(false);
            c85.setEnabled(false);
            d85.setEnabled(false);
            i85.setEnabled(false);
        }

        if (so86.isSelected()) {
            so86.setEnabled(true);
            c86.setEnabled(true);
            d86.setEnabled(true);
            i86.setEnabled(true);
        } else {
            so86.setEnabled(false);
            c86.setEnabled(false);
            d86.setEnabled(false);
            i86.setEnabled(false);
        }

        if (so87.isSelected()) {
            so87.setEnabled(true);
            c87.setEnabled(true);
            d87.setEnabled(true);
            i87.setEnabled(true);
        } else {
            so87.setEnabled(false);
            c87.setEnabled(false);
            d87.setEnabled(false);
            i87.setEnabled(false);
        }

        if (so88.isSelected()) {
            so88.setEnabled(true);
            c88.setEnabled(true);
            d88.setEnabled(true);
            i88.setEnabled(true);
        } else {
            so88.setEnabled(false);
            c88.setEnabled(false);
            d88.setEnabled(false);
            i88.setEnabled(false);
        }

        if (so89.isSelected()) {
            so89.setEnabled(true);
            c89.setEnabled(true);
            d89.setEnabled(true);
            i89.setEnabled(true);
        } else {
            so89.setEnabled(false);
            c89.setEnabled(false);
            d89.setEnabled(false);
            i89.setEnabled(false);
        }
        if (so90.isSelected()) {
            so90.setEnabled(true);
            c90.setEnabled(true);
            d90.setEnabled(true);
            i90.setEnabled(true);
        } else {
            so90.setEnabled(false);
            c90.setEnabled(false);
            d90.setEnabled(false);
            i90.setEnabled(false);
        }
        if (so91.isSelected()) {
            so91.setEnabled(true);
            c91.setEnabled(true);
            d91.setEnabled(true);
            i91.setEnabled(true);
        } else {
            so91.setEnabled(false);
            c91.setEnabled(false);
            d91.setEnabled(false);
            i91.setEnabled(false);
        }

        if (so92.isSelected()) {
            so92.setEnabled(true);
            c92.setEnabled(true);
            d92.setEnabled(true);
            i92.setEnabled(true);
        } else {
            so92.setEnabled(false);
            c92.setEnabled(false);
            d92.setEnabled(false);
            i92.setEnabled(false);
        }

        if (so93.isSelected()) {
            so93.setEnabled(true);
            c93.setEnabled(true);
            d93.setEnabled(true);
            i93.setEnabled(true);
        } else {
            so93.setEnabled(false);
            c93.setEnabled(false);
            d93.setEnabled(false);
            i93.setEnabled(false);
        }

        if (so94.isSelected()) {
            so94.setEnabled(true);
            c94.setEnabled(true);
            d94.setEnabled(true);
            i94.setEnabled(true);
        } else {
            so94.setEnabled(false);
            c94.setEnabled(false);
            d94.setEnabled(false);
            i94.setEnabled(false);
        }

        if (so95.isSelected()) {
            so95.setEnabled(true);
            c95.setEnabled(true);
            d95.setEnabled(true);
            i95.setEnabled(true);
        } else {
            so95.setEnabled(false);
            c95.setEnabled(false);
            d95.setEnabled(false);
            i95.setEnabled(false);
        }

        if (so82.isSelected() || so83.isSelected() || so84.isSelected() || so85.isSelected()
                || so86.isSelected() || so87.isSelected()
                || so88.isSelected() || so89.isSelected() || so90.isSelected()
                || so91.isSelected() || so92.isSelected() || so93.isSelected()
                || so94.isSelected() || so95.isSelected()) {
            JOptionPane.showMessageDialog(null, "Por favor, evalue");
        }
    }
    private void seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarActionPerformed

        if (so82.isSelected() || so83.isSelected() || so84.isSelected() || so85.isSelected() || so86.isSelected() || so87.isSelected()
                || so88.isSelected() || so89.isSelected() || so90.isSelected() || so91.isSelected() || so92.isSelected() || so93.isSelected()
                || so94.isSelected() || so95.isSelected()) {
            validarActivos();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione al menos un activo para continuar", "¡Advertencia!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_seleccionarActionPerformed

    private void continuar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuar2MouseClicked

        if (so82.isSelected() || so83.isSelected() || so84.isSelected() || so85.isSelected() || so86.isSelected() || so87.isSelected()
                || so88.isSelected() || so89.isSelected() || so90.isSelected() || so91.isSelected() || so92.isSelected() || so93.isSelected()
                || so94.isSelected() || so95.isSelected()) {
            Principal principal = new Principal();
            principal.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Por favor seleccione al menos un activo para continuar", "¡Advertencia!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_continuar2MouseClicked

    private void continuar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuar2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_continuar2ActionPerformed

    private void so83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_so83ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_so83ActionPerformed

    private void so87ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_so87ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_so87ActionPerformed

    private void c82KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c82KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c82.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c82KeyTyped

    private void i82KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i82KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i82.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i82KeyTyped

    private void d82KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d82KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d82.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d82KeyTyped

    private void c83KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c83KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c83.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c83KeyTyped

    private void i83KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i83KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i83.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i83KeyTyped

    private void d83KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d83KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d83.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d83KeyTyped

    private void c84KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c84KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c84.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c84KeyTyped

    private void i84KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i84KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i84.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i84KeyTyped

    private void d84KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d84KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d84.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d84KeyTyped

    private void c85KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c85KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c85.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c85KeyTyped

    private void i85KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i85KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i85.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i85KeyTyped

    private void d85KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d85KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d85.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d85KeyTyped

    private void c86KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c86KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c86.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c86KeyTyped

    private void i86KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i86KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i86.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i86KeyTyped

    private void d86KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d86KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d86.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d86KeyTyped

    private void c87KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c87KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c87.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c87KeyTyped

    private void i87KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i87KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i87.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i87KeyTyped

    private void d87KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d87KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d87.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d87KeyTyped

    private void c88KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c88KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c88.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c88KeyTyped

    private void i88KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i88KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i88.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i88KeyTyped

    private void d88KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d88KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d88.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d88KeyTyped

    private void c89KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c89KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c89.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c89KeyTyped

    private void i89KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i89KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i89.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i89KeyTyped

    private void d89KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d89KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d89.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d89KeyTyped

    private void c90KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c90KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c90.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c90KeyTyped

    private void i90KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i90KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i90.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i90KeyTyped

    private void d90KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d90KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d90.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d90KeyTyped

    private void c91KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c91KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c91.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c91KeyTyped

    private void i91KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i91KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i91.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i91KeyTyped

    private void d91KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d91KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d91.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d91KeyTyped

    private void c92KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c92KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c92.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c92KeyTyped

    private void i92KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i92KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i92.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i92KeyTyped

    private void d92KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d92KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d92.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d92KeyTyped

    private void c93KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c93KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c93.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c93KeyTyped

    private void i93KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i93KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i93.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i93KeyTyped

    private void d93KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d93KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d93.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d93KeyTyped

    private void c94KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c94KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c94.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c94KeyTyped

    private void i94KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i94KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i94.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i94KeyTyped

    private void d94KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d94KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d94.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d94KeyTyped

    private void c95KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_c95KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (c95.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_c95KeyTyped

    private void i95KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_i95KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (i95.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_i95KeyTyped

    private void d95KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_d95KeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();

        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 1 y 10)");
        }

        //Para que no use caracteres especiales
        if (validar < '0' || validar > '9') {
            evt.consume();
        }

        //Para que solo deje ingresar un caracter (0 - 9)
        if (d95.getText().length() >= 1) {
            evt.consume();
            getToolkit().beep();
            JOptionPane.showMessageDialog(rootPane, "Ingresar sólo números (valores entre 0 y 9)");
        }
    }//GEN-LAST:event_d95KeyTyped

    private void d12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d12MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "La información no se pone a disposición ni se revela a individuos, entidades o procesos no autorizados.",
            "[Confidencialidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:
    }//GEN-LAST:event_d12MouseClicked

    private void d55MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d55MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Mantenimiento de la exactitud y completitud de la información y sus métodos de proceso.",
            "[Integridad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_d55MouseClicked

    private void d56MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d56MouseClicked

        String sl = System.getProperty("line.separator");
        JOptionPane.showMessageDialog(rootPane, "Acceso y utilización de la información y los sistemas de tratamiento de la misma"
            +sl+ "por parte de los individuos, entidades o procesos autorizados cuando lo requieran.",
            "[Disponibilidad]", JOptionPane.INFORMATION_MESSAGE);// TODO add your handling code here:// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_d56MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked

        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro qué desea salir?", "¡Alerta!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (JOptionPane.YES_OPTION == resp) {
            JOptionPane.showMessageDialog(null, "Hasta pronto...", "Sistema de evaluación", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor continue con la evaluación", "Sistema de evaluación SGSI", JOptionPane.INFORMATION_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Soportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Soportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Soportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Soportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Soportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inferior;
    private javax.swing.JPanel Principal;
    private javax.swing.JPanel Superior;
    private javax.swing.JLabel a;
    private javax.swing.JLabel b;
    private javax.swing.JLabel c;
    private javax.swing.JTextField c82;
    private javax.swing.JTextField c83;
    private javax.swing.JTextField c84;
    private javax.swing.JTextField c85;
    private javax.swing.JTextField c86;
    private javax.swing.JTextField c87;
    private javax.swing.JTextField c88;
    private javax.swing.JTextField c89;
    private javax.swing.JTextField c90;
    private javax.swing.JTextField c91;
    private javax.swing.JTextField c92;
    private javax.swing.JTextField c93;
    private javax.swing.JTextField c94;
    private javax.swing.JTextField c95;
    private javax.swing.JButton continuar2;
    private javax.swing.JLabel d;
    private javax.swing.JLabel d11;
    private javax.swing.JLabel d12;
    private javax.swing.JLabel d54;
    private javax.swing.JLabel d55;
    private javax.swing.JLabel d56;
    private javax.swing.JLabel d6;
    private javax.swing.JTextField d82;
    private javax.swing.JTextField d83;
    private javax.swing.JTextField d84;
    private javax.swing.JTextField d85;
    private javax.swing.JTextField d86;
    private javax.swing.JTextField d87;
    private javax.swing.JTextField d88;
    private javax.swing.JTextField d89;
    private javax.swing.JTextField d90;
    private javax.swing.JTextField d91;
    private javax.swing.JTextField d92;
    private javax.swing.JTextField d93;
    private javax.swing.JTextField d94;
    private javax.swing.JTextField d95;
    private javax.swing.JTextField i82;
    private javax.swing.JTextField i83;
    private javax.swing.JTextField i84;
    private javax.swing.JTextField i85;
    private javax.swing.JTextField i86;
    private javax.swing.JTextField i87;
    private javax.swing.JTextField i88;
    private javax.swing.JTextField i89;
    private javax.swing.JTextField i90;
    private javax.swing.JTextField i91;
    private javax.swing.JTextField i92;
    private javax.swing.JTextField i93;
    private javax.swing.JTextField i94;
    private javax.swing.JTextField i95;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton seleccionar;
    private javax.swing.JRadioButton so82;
    private javax.swing.JRadioButton so83;
    private javax.swing.JRadioButton so84;
    private javax.swing.JRadioButton so85;
    private javax.swing.JRadioButton so86;
    private javax.swing.JRadioButton so87;
    private javax.swing.JRadioButton so88;
    private javax.swing.JRadioButton so89;
    private javax.swing.JRadioButton so90;
    private javax.swing.JRadioButton so91;
    private javax.swing.JRadioButton so92;
    private javax.swing.JRadioButton so93;
    private javax.swing.JRadioButton so94;
    private javax.swing.JRadioButton so95;
    // End of variables declaration//GEN-END:variables
}
